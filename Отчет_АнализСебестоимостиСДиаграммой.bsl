// Отчет с диаграммой для анализа себестоимости блюд

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    УстановитьПериодПоУмолчанию();
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
    
    СформироватьОтчетНаСервере();
    СоздатьДиаграммыАнализа();
    
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграммы(Команда)
    
    СоздатьДиаграммыАнализа();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьПериодПоУмолчанию()
    
    НачалоПериода = НачалоМесяца(ТекущаяДата());
    КонецПериода = КонецДня(ТекущаяДата());
    
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
    
    ПараметрыОтчета = Новый Структура;
    ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
    ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
    ПараметрыОтчета.Вставить("Склад", Склад);
    
    // Получаем данные для анализа
    ОбработкаАнализ = Обработки.АнализСебестоимостиБлюд.Создать();
    ДанныеАнализа = ОбработкаАнализ.ПолучитьДанныеДляАнализа(ПараметрыОтчета);
    
    // Заполняем табличную часть формы
    РезультатАнализа.Загрузить(ДанныеАнализа);
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиаграммыАнализа()
    
    СоздатьДиаграммуСебестоимостиПоБлюдам();
    СоздатьДиаграммуКруговуюСтруктурыЗатрат();
    СоздатьДиаграммуГистограммуПорций();
    СоздатьДиаграммуТрендаСебестоимости();
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиаграммуСебестоимостиПоБлюдам()
    
    // Создаем диаграмму типа "Гистограмма"
    ДиаграммаСебестоимости.Очистить();
    ДиаграммаСебестоимости.ТипДиаграммы = ТипДиаграммы.Гистограмма;
    ДиаграммаСебестоимости.Заголовок = "Анализ себестоимости по блюдам";
    
    // Настраиваем оси
    ДиаграммаСебестоимости.ОсьX.Заголовок = "Блюда";
    ДиаграммаСебестоимости.ОсьY.Заголовок = "Себестоимость (руб.)";
    
    // Добавляем серии данных
    СерияСебестоимостьПорции = ДиаграммаСебестоимости.УстановитьСерию("Себестоимость порции");
    СерияСуммарнаяСебестоимость = ДиаграммаСебестоимости.УстановитьСерию("Общая себестоимость");
    
    СерияСебестоимостьПорции.Цвет = WebЦвета.СинийСтальной;
    СерияСуммарнаяСебестоимость.Цвет = WebЦвета.КрасныйТемный;
    
    // Заполняем данными
    Для Каждого СтрокаДанных Из РезультатАнализа Цикл
        
        Точка = ДиаграммаСебестоимости.УстановитьТочку(Строка(СтрокаДанных.ГотовоеБлюдо));
        Точка.УстановитьЗначение(СерияСебестоимостьПорции, СтрокаДанных.СебестоимостьПорции);
        Точка.УстановитьЗначение(СерияСуммарнаяСебестоимость, СтрокаДанных.СуммарнаяСебестоимость);
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиаграммуКруговуюСтруктурыЗатрат()
    
    // Создаем круговую диаграмму для анализа структуры затрат
    ДиаграммаКруговая.Очистить();
    ДиаграммаКруговая.ТипДиаграммы = ТипДиаграммы.Круговая;
    ДиаграммаКруговая.Заголовок = "Структура затрат по блюдам";
    
    // Добавляем серию
    СерияЗатраты = ДиаграммаКруговая.УстановитьСерию("Затраты");
    
    // Определяем цвета для секторов
    МассивЦветов = Новый Массив;
    МассивЦветов.Добавить(WebЦвета.Зеленый);
    МассивЦветов.Добавить(WebЦвета.Синий);
    МассивЦветов.Добавить(WebЦвета.Красный);
    МассивЦветов.Добавить(WebЦвета.Оранжевый);
    МассивЦветов.Добавить(WebЦвета.Фиолетовый);
    МассивЦветов.Добавить(WebЦвета.Коричневый);
    
    ИндексЦвета = 0;
    
    // Заполняем данными (берем топ-6 блюд по затратам)
    ТаблицаСортированная = РезультатАнализа.Скопировать();
    ТаблицаСортированная.Сортировать("СуммарнаяСебестоимость УБЫВ");
    
    Счетчик = 0;
    Для Каждого СтрокаДанных Из ТаблицаСортированная Цикл
        
        Если Счетчик >= 6 Тогда
            Прервать;
        КонецЕсли;
        
        Точка = ДиаграммаКруговая.УстановитьТочку(Строка(СтрокаДанных.ГотовоеБлюдо));
        Точка.УстановитьЗначение(СерияЗатраты, СтрокаДанных.СуммарнаяСебестоимость);
        
        // Устанавливаем цвет сектора
        Если ИндексЦвета < МассивЦветов.Количество() Тогда
            Точка.Цвет = МассивЦветов[ИндексЦвета];
            ИндексЦвета = ИндексЦвета + 1;
        КонецЕсли;
        
        Счетчик = Счетчик + 1;
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиаграммуГистограммуПорций()
    
    // Создаем гистограмму для анализа количества приготовленных порций
    ДиаграммаПорции.Очистить();
    ДиаграммаПорции.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная;
    ДиаграммаПорции.Заголовок = "Количество приготовленных порций по блюдам";
    
    // Настраиваем оси
    ДиаграммаПорции.ОсьX.Заголовок = "Блюда";
    ДиаграммаПорции.ОсьY.Заголовок = "Количество порций";
    
    // Добавляем серию
    СерияПорции = ДиаграммаПорции.УстановитьСерию("Порции");
    СерияПорции.Цвет = WebЦвета.ЗеленыйЛесной;
    
    // Заполняем данными
    Для Каждого СтрокаДанных Из РезультатАнализа Цикл
        
        Точка = ДиаграммаПорции.УстановитьТочку(Строка(СтрокаДанных.ГотовоеБлюдо));
        Точка.УстановитьЗначение(СерияПорции, СтрокаДанных.КоличествоПорций);
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиаграммуТрендаСебестоимости()
    
    // Создаем график для анализа эффективности (соотношение себестоимости и количества ингредиентов)
    ДиаграммаТренд.Очистить();
    ДиаграммаТренд.ТипДиаграммы = ТипДиаграммы.График;
    ДиаграммаТренд.Заголовок = "Анализ эффективности: себестоимость vs сложность рецепта";
    
    // Настраиваем оси
    ДиаграммаТренд.ОсьX.Заголовок = "Количество ингредиентов";
    ДиаграммаТренд.ОсьY.Заголовок = "Себестоимость порции (руб.)";
    
    // Добавляем серию
    СерияЭффективность = ДиаграммаТренд.УстановитьСерию("Себестоимость/Сложность");
    СерияЭффективность.Цвет = WebЦвета.КрасныйТемный;
    СерияЭффективность.ТипЛинии = ТипЛинииДиаграммы.Сплошная;
    СерияЭффективность.ТипМаркера = ТипМаркераДиаграммы.Круг;
    
    // Сортируем по количеству ингредиентов
    ТаблицаСортированная = РезультатАнализа.Скопировать();
    ТаблицаСортированная.Сортировать("КоличествоИнгредиентов ВОЗР");
    
    // Заполняем данными
    Для Каждого СтрокаДанных Из ТаблицаСортированная Цикл
        
        Точка = ДиаграммаТренд.УстановитьТочку(СтрокаДанных.КоличествоИнгредиентов);
        Точка.УстановитьЗначение(СерияЭффективность, СтрокаДанных.СебестоимостьПорции);
        Точка.Текст = Строка(СтрокаДанных.ГотовоеБлюдо);
        
    КонецЦикла;
    
КонецПроцедуры

&НаКлиенте
Процедура РезультатАнализаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ТекущиеДанные = Элементы.РезультатАнализа.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Открываем детализацию по ингредиентам
    ПоказатьДетализациюПоИнгредиентам(ТекущиеДанные.Рецепт);
    
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДетализациюПоИнгредиентам(Рецепт)
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("Рецепт", Рецепт);
    ПараметрыФормы.Вставить("НачалоПериода", НачалоПериода);
    ПараметрыФормы.Вставить("КонецПериода", КонецПериода);
    ПараметрыФормы.Вставить("Склад", Склад);
    
    ОткрытьФорму("Обработка.АнализСебестоимостиБлюд.Форма.ДетализацияПоИнгредиентам", ПараметрыФормы);
    
КонецПроцедуры

#КонецОбласти
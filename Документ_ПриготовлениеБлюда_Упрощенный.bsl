// Упрощенный документ "Приготовление блюда"

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

    // Простая обработка проведения без сложной логики
    Если ПриготавливаемыеБлюда.Количество() = 0 Тогда
        ДокументОтчет = Новый ТабличныйДокумент;
        ДокументОтчет.Область(1,1,1,1).Текст = "Не заполнен список приготавливаемых блюд";
        Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверяем заполненность данных
    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл
        Если НЕ ЗначениеЗаполнено(СтрокаБлюда.Блюдо) Тогда
            ДокументОтчет = Новый ТабличныйДокумент;
            ДокументОтчет.Область(1,1,1,1).Текст = "Не заполнено блюдо в строке " + ПриготавливаемыеБлюда.Индекс(СтрокаБлюда) + 1;
            Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
            Отказ = Истина;
            Возврат;
        КонецЕсли;

        Если СтрокаБлюда.КоличествоПорций <= 0 Тогда
            ДокументОтчет = Новый ТабличныйДокумент;
            ДокументОтчет.Область(1,1,1,1).Текст = "Не заполнено количество порций для блюда " + СтрокаБлюда.Блюдо;
            Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
            Отказ = Истина;
            Возврат;
        КонецЕсли;
    КонецЦикла;

    // Проверяем наличие складов
    Если НЕ ЗначениеЗаполнено(СкладСырья) Тогда
        ДокументОтчет = Новый ТабличныйДокумент;
        ДокументОтчет.Область(1,1,1,1).Текст = "Не заполнен склад сырья";
        Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    Если НЕ ЗначениеЗаполнено(СкладГотовойПродукции) Тогда
        ДокументОтчет = Новый ТабличныйДокумент;
        ДокументОтчет.Область(1,1,1,1).Текст = "Не заполнен склад готовой продукции";
        Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверка наличия ингредиентов на складе
    ПроверитьНаличиеИнгредиентовНаСкладе(Отказ);
    Если Отказ Тогда
        Возврат;
    КонецЕсли;

    // Упрощенная обработка проведения без движений по регистрам
    // Просто выводим информацию о том, что будет списано/оприходовано

    // Списываем ингредиенты и оприходуем готовые блюда
    СписатьИнгредиентыПоТехкарточкам(Отказ);

    Если НЕ Отказ Тогда
        ОприходоватьГотовыеБлюда(Отказ);
    КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОтменыПроведения(Отказ)

    // Отменяем движения - пробуем разные варианты названий регистра
    Попытка
        Движения.РегистрТоварыНаСкладах.Записывать = Истина;
        Движения.РегистрТоварыНаСкладах.Очистить();
    Исключение
        Попытка
            Движения.ТоварыНаСкладах.Записывать = Истина;
            Движения.ТоварыНаСкладах.Очистить();
        Исключение
            Попытка
                Движения.ОстаткиТоваров.Записывать = Истина;
                Движения.ОстаткиТоваров.Очистить();
            Исключение
                Сообщить("ПРЕДУПРЕЖДЕНИЕ: Не удалось найти регистр для отмены движений");
            КонецПопытки;
        КонецПопытки;
    КонецПопытки;

КонецПроцедуры

Процедура ПроверитьНаличиеИнгредиентовНаСкладе(Отказ)

    ТаблицаНехваток = Новый ТаблицаЗначений;
    ТаблицаНехваток.Колонки.Добавить("Ингредиент");
    ТаблицаНехваток.Колонки.Добавить("НеобходимоеКоличество", Новый ОписаниеТипов("Число"));
    ТаблицаНехваток.Колонки.Добавить("ФактическийОстаток", Новый ОписаниеТипов("Число"));
    ТаблицаНехваток.Колонки.Добавить("Нехватка", Новый ОписаниеТипов("Число"));

    // Собираем все необходимые ингредиенты
    ОбщийСписокИнгредиентов = Новый ТаблицаЗначений;
    ОбщийСписокИнгредиентов.Колонки.Добавить("Ингредиент");
    ОбщийСписокИнгредиентов.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));

    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
            СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

            Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
                НайденнаяСтрока = ОбщийСписокИнгредиентов.Найти(СтрокаИнгредиент.Ингредиент, "Ингредиент");
                Если НайденнаяСтрока = Неопределено Тогда
                    НоваяСтрока = ОбщийСписокИнгредиентов.Добавить();
                    НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                    НоваяСтрока.Количество = СтрокаИнгредиент.ОбщееКоличество;
                Иначе
                    НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + СтрокаИнгредиент.ОбщееКоличество;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЦикла;

    // Проверяем остатки на складе для каждого ингредиента
    Для Каждого СтрокаИнгредиент Из ОбщийСписокИнгредиентов Цикл
        ТекущийОстаток = ПолучитьОстатокИнгредиентаНаСкладе(СтрокаИнгредиент.Ингредиент, СкладСырья);

        Если ТекущийОстаток < СтрокаИнгредиент.Количество Тогда
            НоваяСтрока = ТаблицаНехваток.Добавить();
            НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
            НоваяСтрока.НеобходимоеКоличество = СтрокаИнгредиент.Количество;
            НоваяСтрока.ФактическийОстаток = ТекущийОстаток;
            НоваяСтрока.Нехватка = СтрокаИнгредиент.Количество - ТекущийОстаток;
        КонецЕсли;
    КонецЦикла;

    // Если есть нехватки, выводим отчет и блокируем проведение
    Если ТаблицаНехваток.Количество() > 0 Тогда
        ДокументОтчет = Новый ТабличныйДокумент;

        // Заголовок
        ДокументОтчет.Область(1,1,1,4).Объединить();
        ДокументОтчет.Область(1,1).Текст = "НЕДОСТАТОЧНО ИНГРЕДИЕНТОВ НА СКЛАДЕ";
        ДокументОтчет.Область(1,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
        ДокументОтчет.Область(1,1).Шрифт = Новый Шрифт(,12,Истина);

        // Шапка таблицы
        ДокументОтчет.Область(3,1).Текст = "Ингредиент";
        ДокументОтчет.Область(3,2).Текст = "Необходимо (кг)";
        ДокументОтчет.Область(3,3).Текст = "На складе (кг)";
        ДокументОтчет.Область(3,4).Текст = "Нехватка (кг)";
        ДокументОтчет.Область(3,1,3,4).Шрифт = Новый Шрифт(,,Истина);

        // Данные
        НомерСтроки = 4;
        Для Каждого СтрокаНехватки Из ТаблицаНехваток Цикл
            ДокументОтчет.Область(НомерСтроки,1).Текст = Строка(СтрокаНехватки.Ингредиент);
            ДокументОтчет.Область(НомерСтроки,2).Текст = Формат(СтрокаНехватки.НеобходимоеКоличество, "ЧДЦ=3");
            ДокументОтчет.Область(НомерСтроки,3).Текст = Формат(СтрокаНехватки.ФактическийОстаток, "ЧДЦ=3");
            ДокументОтчет.Область(НомерСтроки,4).Текст = Формат(СтрокаНехватки.Нехватка, "ЧДЦ=3");
            НомерСтроки = НомерСтроки + 1;
        КонецЦикла;

        Сообщить("ОШИБКА: " + ДокументОтчет.Область(1,1,1,1).Текст);
        Отказ = Истина;
    КонецЕсли;

КонецПроцедуры

Функция ПолучитьОстатокИнгредиентаНаСкладе(Ингредиент, Склад)

    Если НЕ ЗначениеЗаполнено(Ингредиент) ИЛИ НЕ ЗначениеЗаполнено(Склад) Тогда
        Возврат 0;
    КонецЕсли;

    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |    СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остаток
        |ИЗ
        |    РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура = &Ингредиент И Склад = &Склад) КАК ТоварыНаСкладахОстатки";

        Запрос.УстановитьПараметр("Ингредиент", Ингредиент);
        Запрос.УстановитьПараметр("Склад", Склад);

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Если Выборка.Следующий() Тогда
                Возврат Выборка.Остаток;
            КонецЕсли;
        КонецЕсли;
    Исключение
        // Попробуем другие варианты названий регистра
        Попытка
            Запрос = Новый Запрос;
            Запрос.Текст =
            "ВЫБРАТЬ
            |    СУММА(РегистрТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остаток
            |ИЗ
            |    РегистрНакопления.РегистрТоварыНаСкладах.Остатки(, Номенклатура = &Ингредиент И Склад = &Склад) КАК РегистрТоварыНаСкладахОстатки";

            Запрос.УстановитьПараметр("Ингредиент", Ингредиент);
            Запрос.УстановитьПараметр("Склад", Склад);

            Результат = Запрос.Выполнить();
            Если НЕ Результат.Пустой() Тогда
                Выборка = Результат.Выбрать();
                Если Выборка.Следующий() Тогда
                    Возврат Выборка.Остаток;
                КонецЕсли;
            КонецЕсли;
        Исключение
            // Возвращаем 0 если не удалось найти регистр
        КонецПопытки;
    КонецПопытки;

    Возврат 0;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТехкарточкуДляБлюда(ГотовоеБлюдо)

    Если НЕ ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Возврат Справочники.Техкарточки.ПустаяСсылка();
    КонецЕсли;

    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |    Техкарточки.Ссылка КАК Техкарточка
        |ИЗ
        |    Справочник.Техкарточки КАК Техкарточки
        |ГДЕ
        |    Техкарточки.ГотовоеБлюдо = &ГотовоеБлюдо
        |    И НЕ Техкарточки.ПометкаУдаления";

        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            Возврат Выборка.Техкарточка;
        КонецЕсли;
    Исключение
        // Ошибка при запросе
    КонецПопытки;

    Возврат Справочники.Техкарточки.ПустаяСсылка();

КонецФункции

Функция ПолучитьСоставИнгредиентовИзТехкарточки(ГотовоеБлюдо, КоличествоПорций = 1)

    Техкарточка = ПолучитьТехкарточкуДляБлюда(ГотовоеБлюдо);
    СоставИнгредиентов = Новый ТаблицаЗначений;
    СоставИнгредиентов.Колонки.Добавить("Ингредиент");
    СоставИнгредиентов.Колонки.Добавить("КоличествоНаПорцию", Новый ОписаниеТипов("Число"));
    СоставИнгредиентов.Колонки.Добавить("ОбщееКоличество", Новый ОписаниеТипов("Число"));

    Если ЗначениеЗаполнено(Техкарточка) Тогда
        Попытка
            Для Каждого СтрокаИнгредиент Из Техкарточка.СоставИнгредиентов Цикл
                Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаБрутто > 0 Тогда
                    НоваяСтрока = СоставИнгредиентов.Добавить();
                    НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                    НоваяСтрока.КоличествоНаПорцию = СтрокаИнгредиент.НормаБрутто / 1000; // Переводим граммы в килограммы
                    НоваяСтрока.ОбщееКоличество = НоваяСтрока.КоличествоНаПорцию * КоличествоПорций;
                КонецЕсли;
            КонецЦикла;
        Исключение
            // Ошибка при получении состава ингредиентов
        КонецПопытки;
    КонецЕсли;

    Возврат СоставИнгредиентов;

КонецФункции

Процедура СписатьИнгредиентыПоТехкарточкам(Отказ)

    // Упрощенная обработка - с выводом в табличный документ
    ДокументОтчет = Новый ТабличныйДокумент;
    НомерСтроки = 1;

    // Заголовок
    ДокументОтчет.Область(1,1,1,4).Объединить();
    ДокументОтчет.Область(1,1).Текст = "СПИСАНИЕ ИНГРЕДИЕНТОВ";
    ДокументОтчет.Область(1,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
    ДокументОтчет.Область(1,1).Шрифт = Новый Шрифт(,12,Истина);
    НомерСтроки = 3;

    // Шапка таблицы
    ДокументОтчет.Область(НомерСтроки,1).Текст = "Ингредиент";
    ДокументОтчет.Область(НомерСтроки,2).Текст = "Количество (кг)";
    ДокументОтчет.Область(НомерСтроки,3).Текст = "Склад";
    ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,3).Шрифт = Новый Шрифт(,,Истина);
    НомерСтроки = НомерСтроки + 1;

    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл

        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда

            // Получаем состав ингредиентов из техкарточки
            СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

            Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл

                Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.ОбщееКоличество > 0 Тогда

                    // Движение расхода ингредиента - вывод в таблицу
                    ДокументОтчет.Область(НомерСтроки,1).Текст = Строка(СтрокаИнгредиент.Ингредиент);
                    ДокументОтчет.Область(НомерСтроки,2).Текст = Формат(СтрокаИнгредиент.ОбщееКоличество, "ЧДЦ=3");
                    ДокументОтчет.Область(НомерСтроки,3).Текст = Строка(СкладСырья);
                    НомерСтроки = НомерСтроки + 1;

                КонецЕсли;

            КонецЦикла;

        КонецЕсли;

    КонецЦикла;

    ДокументОтчет.Напечатать(Ложь);

КонецПроцедуры

Процедура ОприходоватьГотовыеБлюда(Отказ)

    // Упрощенная обработка - без реальных движений по регистрам
    Сообщить("=== ОПРИХОДОВАНИЕ ГОТОВЫХ БЛЮД ===");
    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл

        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда

            // Движение прихода готового блюда - упрощенно без реальных движений
            Сообщить(СтрШаблон("ПРИХОД: %1 - %2 порций на склад %3 (стоимость %4 грн)",
                СтрокаБлюда.Блюдо,
                СтрокаБлюда.КоличествоПорций,
                СкладГотовойПродукции,
                СтрокаБлюда.ОбщаяПлановаяСебестоимость));

        КонецЕсли;

    КонецЦикла;

КонецПроцедуры

Процедура ВывестиОтчетОНехваткеИнгредиентов(ТаблицаНехваток)

    Сообщить("==================================================");
    Сообщить("          НЕДОСТАТОЧНО ИНГРЕДИЕНТОВ НА СКЛАДЕ");
    Сообщить("==================================================");
    Сообщить("");

    Для Каждого СтрокаНехватки Из ТаблицаНехваток Цикл
        ТекстСообщения = СтрШаблон("НЕХВАТКА: %1 - Необходимо: %2 кг, На складе: %3 кг, Не хватает: %4 кг",
            СтрокаНехватки.Ингредиент,
            Формат(СтрокаНехватки.НеобходимоеКоличество, "ЧДЦ=3"),
            Формат(СтрокаНехватки.ФактическийОстаток, "ЧДЦ=3"),
            Формат(СтрокаНехватки.Нехватка, "ЧДЦ=3"));
        Сообщить(ТекстСообщения);
    КонецЦикла;

    Сообщить("");
    Сообщить("==================================================");

КонецПроцедуры

Процедура ВывестиОтчетОСписанииИнгредиентов(ДокументОтчет)

    Сообщить("==================================================");
    Сообщить("              СПИСАНИЕ ИНГРЕДИЕНТОВ");
    Сообщить("==================================================");
    Сообщить("");

    // Простой вывод через сообщения
    Сообщить("Отчет о списании ингредиентов сформирован");
    Сообщить("Данные отчета сохранены в табличном документе");

    Сообщить("");
    Сообщить("==================================================");

КонецПроцедуры

#КонецОбласти
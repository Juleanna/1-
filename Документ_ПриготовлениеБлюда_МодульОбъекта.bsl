// Модуль объекта документа "Приготовление блюда"

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

    // Записываем движения по регистрам
    ЗаписатьДвиженияПоРегистрам(Отказ);

КонецПроцедуры

Процедура ОбработкаОтменыПроведения(Отказ)

    // Очищаем все движения при отмене проведения
    Движения.ТоварыНаСкладах.Очистить();
    Движения.СвободныеОстатки.Очистить();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьДвиженияПоРегистрам(Отказ)

    Сообщить(">>> ЗАПИСЬ ВСЕХ ДВИЖЕНИЙ ДОКУМЕНТА <<<");

    // Собираем все ингредиенты для списания
    ТаблицаСписания = Новый ТаблицаЗначений;
    ТаблицаСписания.Колонки.Добавить("Ингредиент");
    ТаблицаСписания.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));

    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
            СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

            Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
                Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.ОбщееКоличество > 0 Тогда
                    НайденнаяСтрока = ТаблицаСписания.Найти(СтрокаИнгредиент.Ингредиент, "Ингредиент");
                    Если НайденнаяСтрока = Неопределено Тогда
                        НоваяСтрока = ТаблицаСписания.Добавить();
                        НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                        НоваяСтрока.Количество = СтрокаИнгредиент.ОбщееКоличество;
                    Иначе
                        НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + СтрокаИнгредиент.ОбщееКоличество;
                    КонецЕсли;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЦикла;

    Сообщить("Собрано ингредиентов для списания: " + Формат(ТаблицаСписания.Количество(), "ЧГ=0"));
    Сообщить("Готовых блюд для оприходования: " + Формат(ПриготавливаемыеБлюда.Количество(), "ЧГ=0"));

    // === ЗАПИСЬ В РЕГИСТР ТоварыНаСкладах ===
    Движения.ТоварыНаСкладах.Записывать = Истина;

    // 1. Списание ингредиентов
    Сообщить("=== СПИСАНИЕ ИНГРЕДИЕНТОВ (ТоварыНаСкладах) ===");
    Для Каждого СтрокаСписания Из ТаблицаСписания Цикл
        Движение = Движения.ТоварыНаСкладах.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
        Движение.Период = Дата;
        Движение.Номенклатура = СтрокаСписания.Ингредиент;
        Движение.Склад = СкладСырья;
        Движение.ВНаличии = СтрокаСписания.Количество;

        Сообщить("  РАСХОД: " + Строка(СтрокаСписания.Ингредиент) + " - " + Формат(СтрокаСписания.Количество, "ЧДЦ=3") + " кг");
    КонецЦикла;

    // 2. Оприходование готовых блюд
    Сообщить("=== ПРИХОД ГОТОВЫХ БЛЮД (ТоварыНаСкладах) ===");
    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
            Движение = Движения.ТоварыНаСкладах.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
            Движение.Период = Дата;
            Движение.Номенклатура = СтрокаБлюда.Блюдо;
            Движение.Склад = СкладГотовойПродукции;
            Движение.ВНаличии = СтрокаБлюда.КоличествоПорций;

            Сообщить("  ПРИХОД: " + Строка(СтрокаБлюда.Блюдо) + " - " + Формат(СтрокаБлюда.КоличествоПорций, "ЧГ=0") + " порций");
        КонецЕсли;
    КонецЦикла;

    // === ЗАПИСЬ В РЕГИСТР СвободныеОстатки ===
    Сообщить(">>> ЗАПИСЬ В РЕГИСТР СвободныеОстатки <<<");
    Движения.СвободныеОстатки.Записывать = Истина;

    // 1. Списание ингредиентов
    Сообщить("=== РАСХОД ИНГРЕДИЕНТОВ (СвободныеОстатки) ===");
    Для Каждого СтрокаСписания Из ТаблицаСписания Цикл
        Движение = Движения.СвободныеОстатки.Добавить();
        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
        Движение.Период = Дата;
        Движение.Номенклатура = СтрокаСписания.Ингредиент;
        Движение.Склад = СкладСырья;
        Движение.ВНаличии = СтрокаСписания.Количество;

        Сообщить("  РАСХОД: " + Строка(СтрокаСписания.Ингредиент) + " - " + Формат(СтрокаСписания.Количество, "ЧДЦ=3") + " кг");
    КонецЦикла;

    // 2. Оприходование готовых блюд
    Сообщить("=== ПРИХОД ГОТОВЫХ БЛЮД (СвободныеОстатки) ===");
    Для Каждого СтрокаБлюда Из ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
            Движение = Движения.СвободныеОстатки.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
            Движение.Период = Дата;
            Движение.Номенклатура = СтрокаБлюда.Блюдо;
            Движение.Склад = СкладГотовойПродукции;
            Движение.ВНаличии = СтрокаБлюда.КоличествоПорций;

            Сообщить("  ПРИХОД: " + Строка(СтрокаБлюда.Блюдо) + " - " + Формат(СтрокаБлюда.КоличествоПорций, "ЧГ=0") + " порций");
        КонецЕсли;
    КонецЦикла;

    Сообщить("=== ВСЕ ДВИЖЕНИЯ УСПЕШНО ЗАПИСАНЫ ===");

КонецПроцедуры

Функция ПолучитьСоставИнгредиентовИзТехкарточки(Блюдо, КоличествоПорций)

    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |    ТехкарточкиСоставИнгредиентов.Ингредиент КАК Ингредиент,
        |    ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 * &КоличествоПорций КАК ОбщееКоличество
        |ИЗ
        |    Справочник.Техкарточки.СоставИнгредиентов КАК ТехкарточкиСоставИнгредиентов
        |ГДЕ
        |    ТехкарточкиСоставИнгредиентов.Ссылка.ГотовоеБлюдо = &Блюдо
        |    И НЕ ТехкарточкиСоставИнгредиентов.Ссылка.ПометкаУдаления";

        Запрос.УстановитьПараметр("Блюдо", Блюдо);
        Запрос.УстановитьПараметр("КоличествоПорций", КоличествоПорций);

        Возврат Запрос.Выполнить().Выгрузить();
    Исключение
        Возврат Новый ТаблицаЗначений;
    КонецПопытки;

КонецФункции

#КонецОбласти

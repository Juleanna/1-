// Модуль справочника КулинарныеРецепты

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ТехкарточкаПриИзменении(Элемент)
    
    // При выборе техкарточки заполняем данные рецепта
    Если ЗначениеЗаполнено(Объект.Техкарточка) Тогда
        ЗаполнитьРецептПоТехкарточке();
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПересчитатьСебестоимость(Команда)
    
    Если ЗначениеЗаполнено(Объект.Техкарточка) Тогда
        ПересчитатьСебестоимостьПоТехкарточке();
    Иначе
        Сообщить("Не выбрана технологическая карта для пересчета себестоимости");
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТехкарточку(Команда)
    
    // Создаем новую техкарточку на основе данных рецепта
    ПараметрыФормы = Новый Структура;
    
    // Заполняем значения по умолчанию из рецепта
    ЗначенияЗаполнения = Новый Структура;
    ЗначенияЗаполнения.Вставить("Description", Объект.Description);
    ЗначенияЗаполнения.Вставить("ГотовоеБлюдо", Объект.ГотовоеБлюдо);
    ЗначенияЗаполнения.Вставить("КатегорияБлюда", Объект.КатегорияБлюда);
    ЗначенияЗаполнения.Вставить("ВремяПриготовления", Объект.ВремяПриготовления);
    ЗначенияЗаполнения.Вставить("ТехнологияПриготовления", Объект.ТехнологияПриготовления);
    ЗначенияЗаполнения.Вставить("СебестоимостьПорции", Объект.СебестоимостьПорции);
    
    ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
    
    ОповещениеЗавершения = Новый ОписаниеОповещения("СоздатьТехкарточкуЗавершение", ЭтотОбъект);
    ОткрытьФорму("Справочник.Техкарточки.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор, , , ОповещениеЗавершения);
    
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТехкарточкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("СправочникСсылка.Техкарточки") Тогда
        Объект.Техкарточка = Результат;
        Модифицированность = Истина;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТехкарточку(Команда)
    
    Если ЗначениеЗаполнено(Объект.Техкарточка) Тогда
        ПараметрыФормы = Новый Структура("Ключ", Объект.Техкарточка);
        ОткрытьФорму("Справочник.Техкарточки.ФормаОбъекта", ПараметрыФормы);
    Иначе
        Сообщить("Не выбрана технологическая карта для открытия");
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРецептПоТехкарточке()
    
    Если НЕ ЗначениеЗаполнено(Объект.Техкарточка) Тогда
        Возврат;
    КонецЕсли;
    
    ДанныеТехкарточки = ПолучитьДанныеТехкарточки(Объект.Техкарточка);
    
    // Заполняем основные реквизиты если они не заполнены
    Если НЕ ЗначениеЗаполнено(Объект.ГотовоеБлюдо) Тогда
        Объект.ГотовоеБлюдо = ДанныеТехкарточки.ГотовоеБлюдо;
    КонецЕсли;
    
    Если НЕ ЗначениеЗаполнено(Объект.КатегорияБлюда) Тогда
        Объект.КатегорияБлюда = ДанныеТехкарточки.КатегорияБлюда;
    КонецЕсли;
    
    Если Объект.ВремяПриготовления = 0 Тогда
        Объект.ВремяПриготовления = ДанныеТехкарточки.ВремяПриготовления;
    КонецЕсли;
    
    Если Объект.КоличествоПорций = 0 Тогда
        Объект.КоличествоПорций = 1; // По умолчанию одна порция
    КонецЕсли;
    
    Если ПустаяСтрока(Объект.ТехнологияПриготовления) Тогда
        Объект.ТехнологияПриготовления = ДанныеТехкарточки.ТехнологияПриготовления;
    КонецЕсли;
    
    Объект.СебестоимостьПорции = ДанныеТехкарточки.СебестоимостьПорции;
    
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСебестоимостьПоТехкарточке()
    
    Если НЕ ЗначениеЗаполнено(Объект.Техкарточка) Тогда
        Возврат;
    КонецЕсли;
    
    // Пересчитываем себестоимость на основе техкарточки
    СебестоимостьПорции = РассчитатьСебестоимостьПоТехкарточке(Объект.Техкарточка);
    Объект.СебестоимостьПорции = СебестоимостьПорции * Объект.КоличествоПорций;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеТехкарточки(Техкарточка)
    
    Результат = Новый Структура;
    Результат.Вставить("ГотовоеБлюдо");
    Результат.Вставить("КатегорияБлюда");
    Результат.Вставить("ВремяПриготовления", 0);
    Результат.Вставить("ТехнологияПриготовления", "");
    Результат.Вставить("СебестоимостьПорции", 0);
    
    Если ЗначениеЗаполнено(Техкарточка) Тогда
        ЗаполнитьЗначенияСвойств(Результат, Техкарточка);
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции

&НаСервереБезКонтекста
Функция РассчитатьСебестоимостьПоТехкарточке(Техкарточка)
    
    Если НЕ ЗначениеЗаполнено(Техкарточка) Тогда
        Возврат 0;
    КонецЕсли;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    ТехкарточкиСоставИнгредиентов.Ингредиент КАК Ингредиент,
    |    ТехкарточкиСоставИнгредиентов.НормаБрутто КАК НормаБрутто,
    |    ТехкарточкиСоставИнгредиентов.СтоимостьЕдиницы КАК СтоимостьЕдиницы,
    |    ТехкарточкиСоставИнгредиентов.СуммаСтоимости КАК СуммаСтоимости
    |ИЗ
    |    Справочник.Техкарточки.СоставИнгредиентов КАК ТехкарточкиСоставИнгредиентов
    |ГДЕ
    |    ТехкарточкиСоставИнгредиентов.Ссылка = &Техкарточка";
    
    Запрос.УстановитьПараметр("Техкарточка", Техкарточка);
    
    СуммарнаяСебестоимость = 0;
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        Если ЗначениеЗаполнено(Выборка.Ингредиент) И Выборка.НормаБрутто > 0 Тогда
            
            // Получаем актуальную цену ингредиента
            СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(Выборка.Ингредиент);
            
            // Рассчитываем стоимость по норме брутто (в килограммах)
            СтоимостьИнгредиента = Выборка.НормаБрутто / 1000 * СтоимостьЕдиницы;
            СуммарнаяСебестоимость = СуммарнаяСебестоимость + СтоимостьИнгредиента;
            
        КонецЕсли;
    КонецЦикла;
    
    Возврат СуммарнаяСебестоимость;
    
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПоследнююЦенуПоступления(Номенклатура)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |    ПоступлениеТоваровУслугТовары.Цена КАК Цена
    |ИЗ
    |    Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
    |ГДЕ
    |    ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура
    |    И ПоступлениеТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
    |УПОРЯДОЧИТЬ ПО
    |    ПоступлениеТоваровУслугТовары.Ссылка.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Цена;
    Иначе
        Возврат 0;
    КонецЕсли;
    
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Если рецепт новый, инициализируем значения по умолчанию
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        Объект.КоличествоПорций = 1;
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    // Синхронизируем данные с техкарточкой если она выбрана
    Если ЗначениеЗаполнено(ТекущийОбъект.Техкарточка) Тогда
        
        ДанныеТехкарточки = ПолучитьДанныеТехкарточки(ТекущийОбъект.Техкарточка);
        
        // Обновляем себестоимость
        СебестоимостьПорции = РассчитатьСебестоимостьПоТехкарточке(ТекущийОбъект.Техкарточка);
        ТекущийОбъект.СебестоимостьПорции = СебестоимостьПорции * ТекущийОбъект.КоличествоПорций;
        
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
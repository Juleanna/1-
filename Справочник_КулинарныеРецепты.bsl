// Модуль справочника КулинарныеРецепты

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура СоставИнгредиентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    Если Поле.Имя = "СоставИнгредиентовИнгредиент" Тогда
        // Открываем форму выбора номенклатуры
        ПараметрыФормы = Новый Структура;
        ПараметрыФормы.Вставить("РежимВыбора", Истина);
        ПараметрыФормы.Вставить("ВидНоменклатуры", ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Материал"));
        
        ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", 
                     ПараметрыФормы, 
                     Элемент,
                     УникальныйИдентификатор,
                     ,
                     ,
                     Новый ОписаниеОповещения("СоставИнгредиентовВыборЗавершение", ЭтотОбъект, ВыбраннаяСтрока),
                     РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если Результат <> Неопределено Тогда
        СтрокаТаблицы = СоставИнгредиентов.НайтиПоИдентификатору(ДополнительныеПараметры);
        Если СтрокаТаблицы <> Неопределено Тогда
            СтрокаТаблицы.Ингредиент = Результат;
            
            // Заполняем единицу измерения
            СведенияОНоменклатуре = ПолучитьСведенияОНоменклатуре(Результат);
            СтрокаТаблицы.ЕдиницаИзмерения = СведенияОНоменклатуре.БазоваяЕдиницаИзмерения;
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСведенияОНоменклатуре(Номенклатура)
    
    Результат = Новый Структура("БазоваяЕдиницаИзмерения");
    
    Если ЗначениеЗаполнено(Номенклатура) Тогда
        Результат.БазоваяЕдиницаИзмерения = Номенклатура.БазоваяЕдиницаИзмерения;
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции

&НаКлиенте
Процедура ПересчитатьСебестоимость(Команда)
    
    ПересчитатьСебестоимостьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСебестоимостьНаСервере()
    
    СуммарнаяСебестоимость = 0;
    
    Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
        Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.Количество > 0 Тогда
            
            // Получаем последнюю цену поступления
            СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(СтрокаИнгредиент.Ингредиент);
            СтрокаИнгредиент.СтоимостьЕдиницы = СтоимостьЕдиницы;
            СтрокаИнгредиент.СуммаСтоимости = СтрокаИнгредиент.Количество * СтоимостьЕдиницы;
            
            СуммарнаяСебестоимость = СуммарнаяСебестоимость + СтрокаИнгредиент.СуммаСтоимости;
            
        КонецЕсли;
    КонецЦикла;
    
    СебестоимостьПорции = СуммарнаяСебестоимость;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююЦенуПоступления(Номенклатура)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |    ПоступлениеТоваровУслугТовары.Цена КАК Цена
    |ИЗ
    |    Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
    |ГДЕ
    |    ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура
    |    И ПоступлениеТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
    |УПОРЯДОЧИТЬ ПО
    |    ПоступлениеТоваровУслугТовары.Ссылка.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Цена;
    Иначе
        Возврат 0;
    КонецЕсли;
    
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоставИнгредиентовДобавить(Команда)
    
    НоваяСтрока = СоставИнгредиентов.Добавить();
    НоваяСтрока.НомерСтроки = СоставИнгредиентов.Количество();
    
    Элементы.СоставИнгредиентов.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовУдалить(Команда)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        СоставИнгредиентов.Удалить(ТекущиеДанные);
        ПеренумероватьСтрокиСостава();
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПеренумероватьСтрокиСостава()
    
    НомерСтроки = 1;
    Для Каждого Строка Из СоставИнгредиентов Цикл
        Строка.НомерСтроки = НомерСтроки;
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Заполняем таблицу состава ингредиентов из реквизитов справочника
    Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
        ЗаполнитьСоставИнгредиентовИзОбъекта();
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоставИнгредиентовИзОбъекта()
    
    СоставИнгредиентов.Очистить();
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    КулинарныеРецептыСоставИнгредиентов.НомерСтроки КАК НомерСтроки,
    |    КулинарныеРецептыСоставИнгредиентов.Ингредиент КАК Ингредиент,
    |    КулинарныеРецептыСоставИнгредиентов.Количество КАК Количество,
    |    КулинарныеРецептыСоставИнгредиентов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
    |    КулинарныеРецептыСоставИнгредиентов.СтоимостьЕдиницы КАК СтоимостьЕдиницы,
    |    КулинарныеРецептыСоставИнгредиентов.СуммаСтоимости КАК СуммаСтоимости,
    |    КулинарныеРецептыСоставИнгредиентов.Комментарий КАК Комментарий
    |ИЗ
    |    Справочник.КулинарныеРецепты.СоставИнгредиентов КАК КулинарныеРецептыСоставИнгредиентов
    |ГДЕ
    |    КулинарныеРецептыСоставИнгредиентов.Ссылка = &Ссылка
    |УПОРЯДОЧИТЬ ПО
    |    КулинарныеРецептыСоставИнгредиентов.НомерСтроки";
    
    Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        НоваяСтрока = СоставИнгредиентов.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
    КонецЦикла;
    
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    // Очищаем табличную часть объекта
    ТекущийОбъект.СоставИнгредиентов.Очистить();
    
    // Заполняем табличную часть из формы
    Для Каждого СтрокаФормы Из СоставИнгредиентов Цикл
        НоваяСтрока = ТекущийОбъект.СоставИнгредиентов.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФормы);
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти
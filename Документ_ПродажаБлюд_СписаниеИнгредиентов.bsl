// Модуль документа для автоматического списания ингредиентов при продаже блюд

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    // Регистрируем продажу блюд
    РегистрироватьПродажуБлюд();
    
    // Автоматически списываем ингредиенты
    СписатьИнгредиентыПоРецептам(Отказ);
    
КонецПроцедуры

Процедура ОбработкаОтменыПроведения(Отказ)
    
    // Отменяем списание ингредиентов
    ОтменитьСписаниеИнгредиентов();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РегистрироватьПродажуБлюд()
    
    // Движения по регистру остатков товаров (расход готовых блюд)
    Движения.ТоварыНаСкладах.Записывать = Истина;
    
    Для Каждого СтрокаТовара Из Товары Цикл
        
        Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) И СтрокаТовара.Количество > 0 Тогда
            
            // Движение расхода готового блюда
            Движение = Движения.ТоварыНаСкладах.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
            Движение.Период = Дата;
            Движение.Склад = Склад;
            Движение.Номенклатура = СтрокаТовара.Номенклатура;
            Движение.Количество = СтрокаТовара.Количество;
            Движение.Стоимость = СтрокаТовара.Сумма;
            
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

Процедура СписатьИнгредиентыПоРецептам(Отказ)
    
    // Получаем все блюда из документа, по которым есть рецепты
    БлюдаСРецептами = ПолучитьБлюдаСРецептами();
    
    Если БлюдаСРецептами.Количество() = 0 Тогда
        Возврат; // Нет блюд с рецептами
    КонецЕсли;
    
    // Движения по регистру остатков материалов (расход ингредиентов)
    Движения.ТоварыНаСкладах.Записывать = Истина;
    
    Для Каждого СтрокаБлюда Из БлюдаСРецептами Цикл
        
        // Получаем состав ингредиентов для данного блюда
        СоставИнгредиентов = ПолучитьСоставИнгредиентовДляБлюда(СтрокаБлюда.Номенклатура, СтрокаБлюда.КоличествоПорций);
        
        Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
            
            // Рассчитываем необходимое количество ингредиента
            КоличествоДляСписания = СтрокаИнгредиент.КоличествоНаПорцию * СтрокаБлюда.КоличествоПорций;
            
            // Проверяем наличие ингредиента на складе
            ОстатокНаСкладе = ПолучитьОстатокНоменклатурыНаСкладе(СтрокаИнгредиент.Ингредиент, Склад, Дата);
            
            Если ОстатокНаСкладе < КоличествоДляСписания Тогда
                
                ТекстСообщения = СтрШаблон("Недостаточно ингредиента ""%1"" на складе ""%2"". 
                                          |Требуется: %3 %4, доступно: %5 %4",
                                          СтрокаИнгредиент.Ингредиент,
                                          Склад,
                                          КоличествоДляСписания,
                                          СтрокаИнгредиент.ЕдиницаИзмерения,
                                          ОстатокНаСкладе);
                
                Сообщение = Новый СообщениеПользователю;
                Сообщение.Текст = ТекстСообщения;
                Сообщение.Сообщить();
                
                Отказ = Истина;
                Продолжить;
                
            КонецЕсли;
            
            // Создаем движение списания ингредиента
            Движение = Движения.ТоварыНаСкладах.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
            Движение.Период = Дата;
            Движение.Склад = Склад;
            Движение.Номенклатура = СтрокаИнгредиент.Ингредиент;
            Движение.Количество = КоличествоДляСписания;
            Движение.Стоимость = КоличествоДляСписания * СтрокаИнгредиент.СтоимостьЕдиницы;
            
            // Регистрируем аналитику списания по рецепту
            Движение = Движения.СписаниеПоРецептам.Добавить();
            Движение.Период = Дата;
            Движение.Рецепт = СтрокаБлюда.Рецепт;
            Движение.ГотовоеБлюдо = СтрокаБлюда.Номенклатура;
            Движение.Ингредиент = СтрокаИнгредиент.Ингредиент;
            Движение.КоличествоПорций = СтрокаБлюда.КоличествоПорций;
            Движение.КоличествоИнгредиента = КоличествоДляСписания;
            Движение.СтоимостьИнгредиента = КоличествоДляСписания * СтрокаИнгредиент.СтоимостьЕдиницы;
            Движение.Склад = Склад;
            
        КонецЦикла;
        
    КонецЦикла;
    
КонецПроцедуры

Функция ПолучитьБлюдаСРецептами()
    
    БлюдаСРецептами = Новый ТаблицаЗначений;
    БлюдаСРецептами.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
    БлюдаСРецептами.Колонки.Добавить("КоличествоПорций", Новый ОписаниеТипов("Число"));
    БлюдаСРецептами.Колонки.Добавить("Рецепт", Новый ОписаниеТипов("СправочникСсылка.КулинарныеРецепты"));
    
    Для Каждого СтрокаТовара Из Товары Цикл
        
        Если ЗначениеЗаполнено(СтрокаТовара.Номенклатура) И СтрокаТовара.Количество > 0 Тогда
            
            // Ищем рецепт для данного блюда
            Рецепт = НайтиРецептДляБлюда(СтрокаТовара.Номенклатура);
            
            Если ЗначениеЗаполнено(Рецепт) Тогда
                
                НоваяСтрока = БлюдаСРецептами.Добавить();
                НоваяСтрока.Номенклатура = СтрокаТовара.Номенклатура;
                НоваяСтрока.КоличествоПорций = СтрокаТовара.Количество;
                НоваяСтрока.Рецепт = Рецепт;
                
            КонецЕсли;
            
        КонецЕсли;
        
    КонецЦикла;
    
    Возврат БлюдаСРецептами;
    
КонецФункции

Функция НайтиРецептДляБлюда(ГотовоеБлюдо)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |    КулинарныеРецепты.Ссылка КАК Рецепт
    |ИЗ
    |    Справочник.КулинарныеРецепты КАК КулинарныеРецепты
    |ГДЕ
    |    КулинарныеРецепты.ГотовоеБлюдо = &ГотовоеБлюдо
    |    И НЕ КулинарныеРецепты.ПометкаУдаления";
    
    Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Рецепт;
    Иначе
        Возврат Справочники.КулинарныеРецепты.ПустаяСсылка();
    КонецЕсли;
    
КонецФункции

Функция ПолучитьСоставИнгредиентовДляБлюда(ГотовоеБлюдо, КоличествоПорций)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    ТехкарточкиСоставИнгредиентов.Ингредиент КАК Ингредиент,
    |    ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 КАК КоличествоНаПорцию,
    |    ""кг"" КАК ЕдиницаИзмерения,
    |    ТехкарточкиСоставИнгредиентов.СтоимостьЕдиницы КАК СтоимостьЕдиницы
    |ИЗ
    |    Справочник.Техкарточки.СоставИнгредиентов КАК ТехкарточкиСоставИнгредиентов
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КулинарныеРецепты КАК КулинарныеРецепты
    |        ПО ТехкарточкиСоставИнгредиентов.Ссылка = КулинарныеРецепты.Техкарточка
    |ГДЕ
    |    КулинарныеРецепты.ГотовоеБлюдо = &ГотовоеБлюдо
    |    И НЕ КулинарныеРецепты.ПометкаУдаления
    |    И НЕ КулинарныеРецепты.Техкарточка.ПометкаУдаления
    |    И ТехкарточкиСоставИнгредиентов.НормаБрутто > 0";
    
    Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

Функция ПолучитьОстатокНоменклатурыНаСкладе(Номенклатура, Склад, НаДату)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
    |ИЗ
    |    РегистрНакопления.ТоварыНаСкладах.Остатки(&НаДату, Номенклатура = &Номенклатура И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
    
    Запрос.УстановитьПараметр("НаДату", НаДату);
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    Запрос.УстановитьПараметр("Склад", Склад);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат ?(Выборка.КоличествоОстаток = Null, 0, Выборка.КоличествоОстаток);
    Иначе
        Возврат 0;
    КонецЕсли;
    
КонецФункции

Процедура ОтменитьСписаниеИнгредиентов()
    
    // Очищаем движения по регистрам при отмене проведения
    Движения.ТоварыНаСкладах.Очистить();
    Движения.СписаниеПоРецептам.Очистить();
    
КонецПроцедуры

#КонецОбласти
////////////////////////////////////////////////////////////////////////////////
// УПРОЩЕННЫЙ КОД ДЛЯ МОДУЛЯ ФОРМЫ ТЕХКАРТОЧЕК
// Работает БЕЗ поля ЦенаИнгредиента - только с автоматическим поиском цен
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Инициализация формы
	Если Объект.Ссылка.Пустая() Тогда
		РасчетСебестоимостиМодуль.ОбновитьЦеныВТехКарточке(Объект);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	РасчетСебестоимостиМодуль.ОбновитьЦеныВТехКарточке(ТекущийОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СоставИнгредиентовИнгредиентПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.СоставИнгредиентов.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	// Очищаем цены при изменении ингредиента
	ТекущаяСтрока.СтоимостьЕдиницы = 0;
	ТекущаяСтрока.СуммаСтоимости = 0;

	// Если ингредиент выбран - автоматически находим цену
	Если ЗначениеЗаполнено(ТекущаяСтрока.Ингредиент) Тогда

		ЦенаЗаКг = ПолучитьЦенуИнгредиентаАвтоматически(ТекущаяСтрока.Ингредиент);

		Если ЦенаЗаКг > 0 Тогда
			ТекущаяСтрока.СтоимостьЕдиницы = ЦенаЗаКг;
			РассчитатьСтоимостьСтроки(ТекущаяСтрока);
		КонецЕсли;

	КонецЕсли;

	ОбновитьОбщуюСебестоимость();

КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовНормаБруттоПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.СоставИнгредиентов.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РассчитатьСтоимостьСтроки(ТекущаяСтрока);
	ОбновитьОбщуюСебестоимость();

КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовСтоимостьЕдиницыПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.СоставИнгредиентов.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РассчитатьСтоимостьСтроки(ТекущаяСтрока);
	ОбновитьОбщуюСебестоимость();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьВсеЦены(Команда)

	ОбновитьВсеЦеныНаСервере();
	Сообщить("Цены обновлены из справочника");

КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеЦенИнгредиентов(Команда)

	КоличествоОбновленных = АвтозаполнениеЦенИнгредиентовНаСервере();

	Если КоличествоОбновленных > 0 Тогда
		Сообщить(СтрШаблон("Автоматически заполнено цен: %1", КоличествоОбновленных));
	Иначе
		Сообщить("Активные цены для ингредиентов не найдены");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьЦенуИнгредиентаАвтоматически(Ингредиент)

	Если НЕ ЗначениеЗаполнено(Ингредиент) Тогда
		Возврат 0;
	КонецЕсли;

	// Ищем активную цену для ингредиента
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныНаИнгредиенты.ЦенаЗаЕдиницу КАК ЦенаЗаЕдиницу,
	|	ЦеныНаИнгредиенты.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.ЦеныНаИнгредиенты КАК ЦеныНаИнгредиенты
	|ГДЕ
	|	ЦеныНаИнгредиенты.Ингредиент = &Ингредиент
	|	И ЦеныНаИнгредиенты.Активность = ИСТИНА
	|	И НЕ ЦеныНаИнгредиенты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныНаИнгредиенты.ДатаУстановкиЦены УБЫВ";

	Запрос.УстановитьПараметр("Ингредиент", Ингредиент);

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	// Приводим цену к килограммам
	ЦенаЗаКг = ПривестиЦенуККилограммам(Выборка.ЦенаЗаЕдиницу, Выборка.ЕдиницаИзмерения);

	Возврат ЦенаЗаКг;

КонецФункции

&НаСервере
Функция ПривестиЦенуККилограммам(ЦенаЗаЕдиницу, ЕдиницаИзмерения)

	Если НЕ ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		Возврат ЦенаЗаЕдиницу;
	КонецЕсли;

	// Получаем код единицы измерения
	КодЕдиницы = "";
	Попытка
		КодЕдиницы = СокрЛП(ВРег(ЕдиницаИзмерения.Код));
	Исключение
		Возврат ЦенаЗаЕдиницу;
	КонецПопытки;

	// Стандартные коэффициенты перевода
	Если КодЕдиницы = "166" ИЛИ КодЕдиницы = "КГ" Тогда
		Возврат ЦенаЗаЕдиницу; // килограмм
	ИначеЕсли КодЕдиницы = "163" ИЛИ КодЕдиницы = "Г" Тогда
		Возврат ЦенаЗаЕдиницу / 1000; // грамм -> кг
	ИначеЕсли КодЕдиницы = "113" ИЛИ КодЕдиницы = "Т" Тогда
		Возврат ЦенаЗаЕдиницу * 1000; // тонна -> кг
	ИначеЕсли КодЕдиницы = "112" ИЛИ КодЕдиницы = "Л" Тогда
		Возврат ЦенаЗаЕдиницу; // литр ≈ кг для воды
	Иначе
		Возврат ЦенаЗаЕдиницу;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ОбновитьВсеЦеныНаСервере()

	Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл

		Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) Тогда

			ЦенаЗаКг = ПолучитьЦенуИнгредиентаАвтоматически(СтрокаИнгредиент.Ингредиент);

			СтрокаИнгредиент.СтоимостьЕдиницы = ЦенаЗаКг;

			// Пересчитываем стоимость
			Если СтрокаИнгредиент.НормаБрутто > 0 Тогда
				СтрокаИнгредиент.СуммаСтоимости = (СтрокаИнгредиент.НормаБрутто / 1000) * ЦенаЗаКг;
			Иначе
				СтрокаИнгредиент.СуммаСтоимости = 0;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	// Обновляем общую себестоимость
	РассчитатьОбщуюСебестоимостьПорции();

КонецПроцедуры

&НаСервере
Функция АвтозаполнениеЦенИнгредиентовНаСервере()

	КоличествоОбновленных = 0;

	Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл

		Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.СтоимостьЕдиницы = 0 Тогда

			ЦенаЗаКг = ПолучитьЦенуИнгредиентаАвтоматически(СтрокаИнгредиент.Ингредиент);

			Если ЦенаЗаКг > 0 Тогда
				СтрокаИнгредиент.СтоимостьЕдиницы = ЦенаЗаКг;

				// Пересчитываем стоимость
				Если СтрокаИнгредиент.НормаБрутто > 0 Тогда
					СтрокаИнгредиент.СуммаСтоимости = (СтрокаИнгредиент.НормаБрутто / 1000) * ЦенаЗаКг;
				КонецЕсли;

				КоличествоОбновленных = КоличествоОбновленных + 1;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	// Обновляем общую себестоимость
	Если КоличествоОбновленных > 0 Тогда
		РассчитатьОбщуюСебестоимостьПорции();
	КонецЕсли;

	Возврат КоличествоОбновленных;

КонецФункции

&НаКлиенте
Процедура РассчитатьСтоимостьСтроки(СтрокаИнгредиент)

	Если СтрокаИнгредиент.НормаБрутто > 0 И СтрокаИнгредиент.СтоимостьЕдиницы > 0 Тогда
		СтрокаИнгредиент.СуммаСтоимости = (СтрокаИнгредиент.НормаБрутто / 1000) * СтрокаИнгредиент.СтоимостьЕдиницы;
	Иначе
		СтрокаИнгредиент.СуммаСтоимости = 0;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОбщуюСебестоимость()

	РассчитатьОбщуюСебестоимостьПорции();

КонецПроцедуры

&НаСервере
Процедура РассчитатьОбщуюСебестоимостьПорции()

	ОбщаяСебестоимость = 0;

	Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл
		ОбщаяСебестоимость = ОбщаяСебестоимость + СтрокаИнгредиент.СуммаСтоимости;
	КонецЦикла;

	Объект.СебестоимостьПорции = ОбщаяСебестоимость;

КонецПроцедуры

#КонецОбласти
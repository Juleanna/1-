// Модуль справочника Техкарточки

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура СоставИнгредиентовНормаБруттоПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Автоматически рассчитываем норму нетто
    Если ТекущиеДанные.НормаБрутто > 0 И ТекущиеДанные.ПроцентОтходов >= 0 Тогда
        ТекущиеДанные.НормаНетто = ТекущиеДанные.НормаБрутто * (100 - ТекущиеДанные.ПроцентОтходов) / 100;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовПроцентОтходовПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Автоматически рассчитываем норму нетто
    Если ТекущиеДанные.НормаБрутто > 0 И ТекущиеДанные.ПроцентОтходов >= 0 Тогда
        ТекущиеДанные.НормаНетто = ТекущиеДанные.НормаБрутто * (100 - ТекущиеДанные.ПроцентОтходов) / 100;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовНормаНеттоПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовИнгредиентПриИзменении(Элемент)

    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;

    // Обновляем цену ингредиента и пищевую ценность
    Если ЗначениеЗаполнено(ТекущиеДанные.Ингредиент) Тогда
        ТекущиеДанные.СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(ТекущиеДанные.Ингредиент);

        // Заполняем пищевую ценность ингредиента
        ПищеваяЦенность = ПолучитьПищевуюЦенностьИнгредиента(ТекущиеДанные.Ингредиент);
        ТекущиеДанные.Белки = ПищеваяЦенность.Белки;
        ТекущиеДанные.Жиры = ПищеваяЦенность.Жиры;
        ТекущиеДанные.Углеводы = ПищеваяЦенность.Углеводы;
        ТекущиеДанные.Калорийность = ПищеваяЦенность.Калорийность;

        РассчитатьСтоимостьСтроки(ТекущиеДанные);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтоимостьСтроки(СтрокаТаблицы)
    
    Если СтрокаТаблицы.НормаБрутто > 0 И СтрокаТаблицы.СтоимостьЕдиницы > 0 Тогда
        // Стоимость рассчитывается от нормы брутто в килограммах
        СтрокаТаблицы.СуммаСтоимости = СтрокаТаблицы.НормаБрутто / 1000 * СтрокаТаблицы.СтоимостьЕдиницы;
    Иначе
        СтрокаТаблицы.СуммаСтоимости = 0;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПересчитатьСебестоимость(Команда)
    
    ПересчитатьСебестоимостьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСебестоимостьНаСервере()

    СуммарнаяСебестоимость = 0;

    Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл
        Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаБрутто > 0 Тогда

            // Если цена не заполнена, пытаемся получить её
            Если СтрокаИнгредиент.СтоимостьЕдиницы = 0 Тогда
                СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(СтрокаИнгредиент.Ингредиент);

                // Если не удалось получить цену автоматически, используем примерную цену
                Если СтоимостьЕдиницы = 0 Тогда
                    // Примерные цены для расчета (грн/кг)
                    НаименованиеТовара = Строка(СтрокаИнгредиент.Ингредиент);
                    НаименованиеВНижнемРегистре = НРег(НаименованиеТовара);

                    Если Найти(НаименованиеВНижнемРегистре, "мясо") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "курица") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "свинина") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "говядина") > 0 Тогда
                        СтоимостьЕдиницы = 120; // 120 грн/кг
                    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "рыба") > 0 Тогда
                        СтоимостьЕдиницы = 80;  // 80 грн/кг
                    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "масло") > 0 Тогда
                        СтоимостьЕдиницы = 60;  // 60 грн/кг
                    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "молоко") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "сметана") > 0 Тогда
                        СтоимостьЕдиницы = 30;  // 30 грн/кг
                    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "картофель") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "морковь") > 0
                        Или Найти(НаименованиеВНижнемРегистре, "лук") > 0 Тогда
                        СтоимостьЕдиницы = 15;  // 15 грн/кг
                    Иначе
                        СтоимостьЕдиницы = 25;  // 25 грн/кг - средняя цена
                    КонецЕсли;
                КонецЕсли;

                СтрокаИнгредиент.СтоимостьЕдиницы = СтоимостьЕдиницы;
            Иначе
                // Используем уже заполненную цену
                СтоимостьЕдиницы = СтрокаИнгредиент.СтоимостьЕдиницы;
            КонецЕсли;

            // Рассчитываем стоимость по норме брутто (переводим граммы в килограммы)
            СтрокаИнгредиент.СуммаСтоимости = СтрокаИнгредиент.НормаБрутто / 1000 * СтоимостьЕдиницы;

            СуммарнаяСебестоимость = СуммарнаяСебестоимость + СтрокаИнгредиент.СуммаСтоимости;

        КонецЕсли;
    КонецЦикла;

    Объект.СебестоимостьПорции = СуммарнаяСебестоимость;

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПищевуюЦенность(Команда)
    
    РассчитатьПищевуюЦенностьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура РассчитатьПищевуюЦенностьНаСервере()

    СуммарныеБелки = 0;
    СуммарныеЖиры = 0;
    СуммарныеУглеводы = 0;
    СуммарнаяКалорийность = 0;

    Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл
        Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаНетто > 0 Тогда

            // Используем данные пищевой ценности из таблицы ингредиентов
            БелкиИзТаблицы = СтрокаИнгредиент.Белки;
            ЖирыИзТаблицы = СтрокаИнгредиент.Жиры;
            УглеводыИзТаблицы = СтрокаИнгредиент.Углеводы;
            КалорийностьИзТаблицы = СтрокаИнгредиент.Калорийность;

            // Если данные в таблице пустые, получаем их автоматически
            Если БелкиИзТаблицы = 0 И ЖирыИзТаблицы = 0 И УглеводыИзТаблицы = 0 И КалорийностьИзТаблицы = 0 Тогда
                ПищеваяЦенность = ПолучитьПищевуюЦенностьИнгредиента(СтрокаИнгредиент.Ингредиент);
                БелкиИзТаблицы = ПищеваяЦенность.Белки;
                ЖирыИзТаблицы = ПищеваяЦенность.Жиры;
                УглеводыИзТаблицы = ПищеваяЦенность.Углеводы;
                КалорийностьИзТаблицы = ПищеваяЦенность.Калорийность;

                // Обновляем данные в таблице для удобства пользователя
                СтрокаИнгредиент.Белки = БелкиИзТаблицы;
                СтрокаИнгредиент.Жиры = ЖирыИзТаблицы;
                СтрокаИнгредиент.Углеводы = УглеводыИзТаблицы;
                СтрокаИнгредиент.Калорийность = КалорийностьИзТаблицы;
            КонецЕсли;

            // Пересчитываем на норму нетто (данные в таблице указаны на 100г)
            КоэффициентПорции = СтрокаИнгредиент.НормаНетто / 100;

            СуммарныеБелки = СуммарныеБелки + БелкиИзТаблицы * КоэффициентПорции;
            СуммарныеЖиры = СуммарныеЖиры + ЖирыИзТаблицы * КоэффициентПорции;
            СуммарныеУглеводы = СуммарныеУглеводы + УглеводыИзТаблицы * КоэффициентПорции;
            СуммарнаяКалорийность = СуммарнаяКалорийность + КалорийностьИзТаблицы * КоэффициентПорции;

        КонецЕсли;
    КонецЦикла;

    Объект.Белки = СуммарныеБелки;
    Объект.Жиры = СуммарныеЖиры;
    Объект.Углеводы = СуммарныеУглеводы;
    Объект.КалорийностьПорции = СуммарнаяКалорийность;

КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовДобавить(Команда)
    
    НоваяСтрока = Объект.СоставИнгредиентов.Добавить();
    НоваяСтрока.НормаБрутто = 0;
    НоваяСтрока.НормаНетто = 0;
    НоваяСтрока.ПроцентОтходов = 0;
    НоваяСтрока.СтоимостьЕдиницы = 0;
    НоваяСтрока.СуммаСтоимости = 0;
    
    Элементы.СоставИнгредиентов.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовУдалить(Команда)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        Объект.СоставИнгредиентов.Удалить(ТекущиеДанные);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьПоследнююЦенуПоступления(Номенклатура)

    // Временная заглушка - возвращаем цену из справочника номенклатуры
    // В будущем здесь нужно реализовать получение цены из документов поступления

    Если ЗначениеЗаполнено(Номенклатура) Тогда
        Попытка
            // Пытаемся получить цену из справочника номенклатуры
            Возврат Номенклатура.ЦенаЗакупки;
        Исключение
            // Если поле ЦенаЗакупки отсутствует, возвращаем 0
            Возврат 0;
        КонецПопытки;
    Иначе
        Возврат 0;
    КонецЕсли;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПищевуюЦенностьИнгредиента(Номенклатура)

    // Структура для возврата пищевой ценности
    Результат = Новый Структура("Белки, Жиры, Углеводы, Калорийность", 0, 0, 0, 0);

    Если ЗначениеЗаполнено(Номенклатура) Тогда

        Попытка
            // Попробуем получить данные из дополнительных реквизитов номенклатуры
            Если Номенклатура.ДополнительныеРеквизиты.Количество() > 0 Тогда
                Для Каждого ДопРеквизит Из Номенклатура.ДополнительныеРеквизиты Цикл
                    Если ДопРеквизит.Свойство.Наименование = "Белки" Тогда
                        Результат.Белки = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Жиры" Тогда
                        Результат.Жиры = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Углеводы" Тогда
                        Результат.Углеводы = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Калорийность" Тогда
                        Результат.Калорийность = ДопРеквизит.Значение;
                    КонецЕсли;
                КонецЦикла;
            КонецЕсли;
        Исключение
            // Если нет дополнительных реквизитов, используем базовые значения
        КонецПопытки;

        // Если данные не получены из дополнительных реквизитов, используем примерные значения
        Если Результат.Белки = 0 И Результат.Жиры = 0 И Результат.Углеводы = 0 И Результат.Калорийность = 0 Тогда

            // Примерные значения пищевой ценности для разных групп продуктов (на 100г)
            НаименованиеТовара = Строка(Номенклатура);
            НаименованиеВНижнемРегистре = НРег(НаименованиеТовара);

            // Мясо и птица
            Если Найти(НаименованиеВНижнемРегистре, "мясо") > 0
                Или Найти(НаименованиеВНижнемРегистре, "курица") > 0
                Или Найти(НаименованиеВНижнемРегистре, "свинина") > 0
                Или Найти(НаименованиеВНижнемРегистре, "говядина") > 0 Тогда
                Результат.Белки = 20;
                Результат.Жиры = 10;
                Результат.Углеводы = 0;
                Результат.Калорийность = 180;

            // Рыба
            ИначеЕсли Найти(НаименованиеВНижнемРегистре, "рыба") > 0
                Или Найти(НаименованиеВНижнемРегистре, "лосось") > 0
                Или Найти(НаименованиеВНижнемРегистре, "треска") > 0 Тогда
                Результат.Белки = 18;
                Результат.Жиры = 5;
                Результат.Углеводы = 0;
                Результат.Калорийность = 110;

            // Овощи
            ИначеЕсли Найти(НаименованиеВНижнемРегистре, "картофель") > 0
                Или Найти(НаименованиеВНижнемРегистре, "морковь") > 0
                Или Найти(НаименованиеВНижнемРегистре, "лук") > 0
                Или Найти(НаименованиеВНижнемРегистре, "капуста") > 0 Тогда
                Результат.Белки = 2;
                Результат.Жиры = 0.5;
                Результат.Углеводы = 8;
                Результат.Калорийность = 40;

            // Крупы и макароны
            ИначеЕсли Найти(НаименованиеВНижнемРегистре, "рис") > 0
                Или Найти(НаименованиеВНижнемРегистре, "гречка") > 0
                Или Найти(НаименованиеВНижнемРегистре, "макароны") > 0
                Или Найти(НаименованиеВНижнемРегистре, "мука") > 0 Тогда
                Результат.Белки = 8;
                Результат.Жиры = 1;
                Результат.Углеводы = 75;
                Результат.Калорийность = 340;

            // Молочные продукты
            ИначеЕсли Найти(НаименованиеВНижнемРегистре, "молоко") > 0
                Или Найти(НаименованиеВНижнемРегистре, "сметана") > 0
                Или Найти(НаименованиеВНижнемРегистре, "творог") > 0
                Или Найти(НаименованиеВНижнемРегистре, "сыр") > 0 Тогда
                Результат.Белки = 15;
                Результат.Жиры = 15;
                Результат.Углеводы = 5;
                Результат.Калорийность = 200;

            // Масло и жиры
            ИначеЕсли Найти(НаименованиеВНижнемРегистре, "масло") > 0
                Или Найти(НаименованиеВНижнемРегистре, "жир") > 0 Тогда
                Результат.Белки = 0;
                Результат.Жиры = 95;
                Результат.Углеводы = 0;
                Результат.Калорийность = 850;

            // Общие значения для неопознанных продуктов
            Иначе
                Результат.Белки = 5;
                Результат.Жиры = 3;
                Результат.Углеводы = 10;
                Результат.Калорийность = 85;
            КонецЕсли;

        КонецЕсли;

    КонецЕсли;

    Возврат Результат;

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Инициализация формы
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        // Новая техкарточка - заполняем значения по умолчанию
        Объект.ВыходПорции = 100;
        Объект.ВремяПриготовления = 30;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
// Модуль справочника Техкарточки

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура СоставИнгредиентовНормаБруттоПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Автоматически рассчитываем норму нетто
    Если ТекущиеДанные.НормаБрутто > 0 И ТекущиеДанные.ПроцентОтходов >= 0 Тогда
        ТекущиеДанные.НормаНетто = ТекущиеДанные.НормаБрутто * (100 - ТекущиеДанные.ПроцентОтходов) / 100;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовПроцентОтходовПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Автоматически рассчитываем норму нетто
    Если ТекущиеДанные.НормаБрутто > 0 И ТекущиеДанные.ПроцентОтходов >= 0 Тогда
        ТекущиеДанные.НормаНетто = ТекущиеДанные.НормаБрутто * (100 - ТекущиеДанные.ПроцентОтходов) / 100;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовНормаНеттоПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    РассчитатьСтоимостьСтроки(ТекущиеДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовИнгредиентПриИзменении(Элемент)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    // Обновляем цену ингредиента
    Если ЗначениеЗаполнено(ТекущиеДанные.Ингредиент) Тогда
        ТекущиеДанные.СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(ТекущиеДанные.Ингредиент);
        РассчитатьСтоимостьСтроки(ТекущиеДанные);
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтоимостьСтроки(СтрокаТаблицы)
    
    Если СтрокаТаблицы.НормаБрутто > 0 И СтрокаТаблицы.СтоимостьЕдиницы > 0 Тогда
        // Стоимость рассчитывается от нормы брутто в килограммах
        СтрокаТаблицы.СуммаСтоимости = СтрокаТаблицы.НормаБрутто / 1000 * СтрокаТаблицы.СтоимостьЕдиницы;
    Иначе
        СтрокаТаблицы.СуммаСтоимости = 0;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПересчитатьСебестоимость(Команда)
    
    ПересчитатьСебестоимостьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСебестоимостьНаСервере()
    
    СуммарнаяСебестоимость = 0;
    
    Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл
        Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаБрутто > 0 Тогда
            
            // Получаем последнюю цену поступления
            СтоимостьЕдиницы = ПолучитьПоследнююЦенуПоступления(СтрокаИнгредиент.Ингредиент);
            СтрокаИнгредиент.СтоимостьЕдиницы = СтоимостьЕдиницы;
            
            // Рассчитываем стоимость по норме брутто
            СтрокаИнгредиент.СуммаСтоимости = СтрокаИнгредиент.НормаБрутто / 1000 * СтоимостьЕдиницы;
            
            СуммарнаяСебестоимость = СуммарнаяСебестоимость + СтрокаИнгредиент.СуммаСтоимости;
            
        КонецЕсли;
    КонецЦикла;
    
    Объект.СебестоимостьПорции = СуммарнаяСебестоимость;
    
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПищевуюЦенность(Команда)
    
    РассчитатьПищевуюЦенностьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура РассчитатьПищевуюЦенностьНаСервере()
    
    СуммарныеБелки = 0;
    СуммарныеЖиры = 0;
    СуммарныеУглеводы = 0;
    СуммарнаяКалорийность = 0;
    
    Для Каждого СтрокаИнгредиент Из Объект.СоставИнгредиентов Цикл
        Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаНетто > 0 Тогда
            
            // Получаем пищевую ценность ингредиента (на 100г)
            ПищеваяЦенность = ПолучитьПищевуюЦенностьИнгредиента(СтрокаИнгредиент.Ингредиент);
            
            // Пересчитываем на норму нетто
            КоэффициентПорции = СтрокаИнгредиент.НормаНетто / 100;
            
            СуммарныеБелки = СуммарныеБелки + ПищеваяЦенность.Белки * КоэффициентПорции;
            СуммарныеЖиры = СуммарныеЖиры + ПищеваяЦенность.Жиры * КоэффициентПорции;
            СуммарныеУглеводы = СуммарныеУглеводы + ПищеваяЦенность.Углеводы * КоэффициентПорции;
            СуммарнаяКалорийность = СуммарнаяКалорийность + ПищеваяЦенность.Калорийность * КоэффициентПорции;
            
        КонецЕсли;
    КонецЦикла;
    
    Объект.Белки = СуммарныеБелки;
    Объект.Жиры = СуммарныеЖиры;
    Объект.Углеводы = СуммарныеУглеводы;
    Объект.КалорийностьПорции = СуммарнаяКалорийность;
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовДобавить(Команда)
    
    НоваяСтрока = Объект.СоставИнгредиентов.Добавить();
    НоваяСтрока.НормаБрутто = 0;
    НоваяСтрока.НормаНетто = 0;
    НоваяСтрока.ПроцентОтходов = 0;
    НоваяСтрока.СтоимостьЕдиницы = 0;
    НоваяСтрока.СуммаСтоимости = 0;
    
    Элементы.СоставИнгредиентов.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
    
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгредиентовУдалить(Команда)
    
    ТекущиеДанные = Элементы.СоставИнгредиентов.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        Объект.СоставИнгредиентов.Удалить(ТекущиеДанные);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьПоследнююЦенуПоступления(Номенклатура)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |    ПоступлениеТоваровУслугТовары.Цена КАК Цена
    |ИЗ
    |    Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
    |ГДЕ
    |    ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура
    |    И ПоступлениеТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
    |УПОРЯДОЧИТЬ ПО
    |    ПоступлениеТоваровУслугТовары.Ссылка.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    
    Результат = Запрос.Выполнить();
    Если НЕ Результат.Пустой() Тогда
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Цена;
    Иначе
        Возврат 0;
    КонецЕсли;
    
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПищевуюЦенностьИнгредиента(Номенклатура)
    
    // Структура для возврата пищевой ценности
    Результат = Новый Структура("Белки, Жиры, Углеводы, Калорийность", 0, 0, 0, 0);
    
    Если ЗначениеЗаполнено(Номенклатура) Тогда
        
        // Здесь можно реализовать получение пищевой ценности из справочника номенклатуры
        // или из отдельного справочника пищевой ценности продуктов
        // Пока возвращаем примерные значения
        
        Попытка
            // Попробуем получить данные из дополнительных реквизитов номенклатуры
            Если Номенклатура.ДополнительныеРеквизиты.Количество() > 0 Тогда
                Для Каждого ДопРеквизит Из Номенклатура.ДополнительныеРеквизиты Цикл
                    Если ДопРеквизит.Свойство.Наименование = "Белки" Тогда
                        Результат.Белки = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Жиры" Тогда
                        Результат.Жиры = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Углеводы" Тогда
                        Результат.Углеводы = ДопРеквизит.Значение;
                    ИначеЕсли ДопРеквизит.Свойство.Наименование = "Калорийность" Тогда
                        Результат.Калорийность = ДопРеквизит.Значение;
                    КонецЕсли;
                КонецЦикла;
            КонецЕсли;
        Исключение
            // Если нет дополнительных реквизитов, используем базовые значения
        КонецПопытки;
        
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Инициализация формы
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        // Новая техкарточка - заполняем значения по умолчанию
        Объект.ВыходПорции = 100;
        Объект.ВремяПриготовления = 30;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
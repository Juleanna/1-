////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ ОБЪЕКТА ОБРАБОТКИ "ОБНОВЛЕНИЕ ЦЕН В ТЕХНОЛОГИЧЕСКИХ КАРТАХ"
// Обновленная версия с правильным именем модуля
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполнить обновление цен
//
Процедура ВыполнитьОбновлениеЦен() Экспорт

	// Очищаем результат предыдущего выполнения
	РезультатОбработки.Очистить();
	КоличествоОбновленных = 0;
	КоличествоОшибок = 0;

	// Получаем список техкарточек для обработки
	СписокТехкарточек = ПолучитьСписокТехкарточекДляОбновления();

	Если СписокТехкарточек.Количество() = 0 Тогда
		Сообщить("Не найдено техкарточек для обновления");
		Возврат;
	КонецЕсли;

	// Обрабатываем каждую техкарточку
	Для Каждого СтрокаТехкарточки Из СписокТехкарточек Цикл

		ОбработатьТехкарточку(СтрокаТехкарточки.ТехКарточка);

	КонецЦикла;

	// Выводим итоговое сообщение
	Сообщить(СтрШаблон("Обработка завершена. Обновлено: %1, ошибок: %2",
		КоличествоОбновленных, КоличествоОшибок));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получить список техкарточек для обновления
//
// Возвращаемое значение:
//  ТаблицаЗначений - Список техкарточек
//
Функция ПолучитьСписокТехкарточекДляОбновления()

	Запрос = Новый Запрос;

	Если РежимОбновления = Перечисления.РежимыОбновленияЦен.ВсеТехкарточки Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Техкарточки.Ссылка КАК ТехКарточка
		|ИЗ
		|	Справочник.Техкарточки КАК Техкарточки
		|ГДЕ
		|	НЕ Техкарточки.ПометкаУдаления";

	ИначеЕсли РежимОбновления = Перечисления.РежимыОбновленияЦен.ПоИнгредиенту Тогда

		Если НЕ ЗначениеЗаполнено(ВыбранныйИнгредиент) Тогда
			Возврат Новый ТаблицаЗначений;
		КонецЕсли;

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТехкарточкиСоставИнгредиентов.Ссылка КАК ТехКарточка
		|ИЗ
		|	Справочник.Техкарточки.СоставИнгредиентов КАК ТехкарточкиСоставИнгредиентов
		|ГДЕ
		|	ТехкарточкиСоставИнгредиентов.Ингредиент = &ВыбранныйИнгредиент
		|	И НЕ ТехкарточкиСоставИнгредиентов.Ссылка.ПометкаУдаления";

		Запрос.УстановитьПараметр("ВыбранныйИнгредиент", ВыбранныйИнгредиент);

	ИначеЕсли РежимОбновления = Перечисления.РежимыОбновленияЦен.ПоКатегории Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Техкарточки.Ссылка КАК ТехКарточка
		|ИЗ
		|	Справочник.Техкарточки КАК Техкарточки
		|ГДЕ
		|	НЕ Техкарточки.ПометкаУдаления";

	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();

	Возврат РезультатЗапроса.Выгрузить();

КонецФункции

// Обработать техкарточку
//
// Параметры:
//  ТехКарточка - СправочникСсылка.Техкарточки - Техкарточка для обработки
//
Процедура ОбработатьТехкарточку(ТехКарточка)

	НоваяСтрокаРезультата = РезультатОбработки.Добавить();
	НоваяСтрокаРезультата.ТехКарточка = ТехКарточка;

	Попытка

		// Запоминаем старую себестоимость
		НоваяСтрокаРезультата.СтараяСебестоимость = ТехКарточка.СебестоимостьПорции;

		// Получаем объект техкарточки
		ТехКарточкаОбъект = ТехКарточка.ПолучитьОбъект();

		Если ТехКарточкаОбъект = Неопределено Тогда
			НоваяСтрокаРезультата.СтатусОбработки = "Ошибка";
			НоваяСтрокаРезультата.ТекстОшибки = "Не удалось получить объект техкарточки";
			КоличествоОшибок = КоличествоОшибок + 1;
			Возврат;
		КонецЕсли;

		// Обновляем цены с использованием правильного имени модуля
		РасчетСебестоимостиМодуль.ОбновитьЦеныВТехКарточке(ТехКарточкаОбъект);

		// Записываем изменения
		ТехКарточкаОбъект.Записать();

		// Фиксируем результат
		НоваяСтрокаРезультата.НоваяСебестоимость = ТехКарточкаОбъект.СебестоимостьПорции;
		НоваяСтрокаРезультата.СтатусОбработки = "Успешно";
		КоличествоОбновленных = КоличествоОбновленных + 1;

	Исключение

		НоваяСтрокаРезультата.СтатусОбработки = "Ошибка";
		НоваяСтрокаРезультата.ТекстОшибки = ОписаниеОшибки();
		КоличествоОшибок = КоличествоОшибок + 1;

	КонецПопытки;

КонецПроцедуры

#КонецОбласти
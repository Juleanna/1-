// Упрощенная форма документа "Приготовление блюда"

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    // Инициализация формы
    Если Объект.Ссылка.Пустая() Тогда
        // Заполнение значений по умолчанию для нового документа
        Объект.Дата = ТекущаяДата();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

    // Обновляем заголовок при открытии
    ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

    // Минимальные проверки перед записью
    Если ТекущийОбъект.ПриготавливаемыеБлюда.Количество() = 0 Тогда
        Сообщить("Не заполнен список приготавливаемых блюд");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриготавливаемыеБлюда

&НаКлиенте
Процедура ПриготавливаемыеБлюдаБлюдоПриИзменении(Элемент)

    ТекущаяСтрока = Элементы.ПриготавливаемыеБлюда.ТекущиеДанные;
    Если ТекущаяСтрока = Неопределено Тогда
        Возврат;
    КонецЕсли;

    // Заполняем себестоимость из техкарточки при выборе блюда
    Если ЗначениеЗаполнено(ТекущаяСтрока.Блюдо) Тогда
        ТекущаяСтрока.ПлановаяСебестоимостьПорции = ПолучитьСебестоимостьИзТехкарточки(ТекущаяСтрока.Блюдо);
        РассчитатьОбщуюСебестоимость(ТекущаяСтрока);
    КонецЕсли;

    ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПриготавливаемыеБлюдаКоличествоПорцийПриИзменении(Элемент)

    ТекущаяСтрока = Элементы.ПриготавливаемыеБлюда.ТекущиеДанные;
    Если ТекущаяСтрока = Неопределено Тогда
        Возврат;
    КонецЕсли;

    РассчитатьОбщуюСебестоимость(ТекущаяСтрока);
    ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПриготавливаемыеБлюдаПлановаяСебестоимостьПорцииПриИзменении(Элемент)

    ТекущаяСтрока = Элементы.ПриготавливаемыеБлюда.ТекущиеДанные;
    Если ТекущаяСтрока = Неопределено Тогда
        Возврат;
    КонецЕсли;

    РассчитатьОбщуюСебестоимость(ТекущаяСтрока);
    ОбновитьЗаголовокФормы();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьНаличиеИнгредиентов(Команда)

    ПроверитьНаличиеИнгредиентовНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТехкарточкам(Команда)

    ЗаполнитьПоТехкарточкамНаСервере();
    ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьДвижения(Команда)

    ДвиженияПоДокументу(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ОстаткиНаСкладе(Команда)

    ОткрытьОтчетОстатков();

КонецПроцедуры

&НаКлиенте
Процедура ДвиженияПоДокументу(Команда)

    ДокументОтчет = СоздатьОтчетДвиженийНаСервере();
    ДокументОтчет.Показать("Движения по документу");

КонецПроцедуры

&НаСервере
Функция СоздатьОтчетДвиженийНаСервере()

    ДокументОтчет = Новый ТабличныйДокумент;

    Если НЕ Объект.Проведен Тогда
        ДокументОтчет.Область(1,1).Текст = "Документ не проведен. Движений нет.";
        Возврат ДокументОтчет;
    КонецЕсли;

    // Заголовок отчета
    ДокументОтчет.Область(1,1,1,4).Объединить();
    ДокументОтчет.Область(1,1).Текст = "ДВИЖЕНИЯ ПО ДОКУМЕНТУ";
    ДокументОтчет.Область(1,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
    ДокументОтчет.Область(1,1).Шрифт = Новый Шрифт(,14,Истина);

    ДокументОтчет.Область(2,1,2,4).Объединить();
    ДокументОтчет.Область(2,1).Текст = "Документ: " + Объект.Ссылка + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
    ДокументОтчет.Область(2,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;

    НомерСтроки = 4;

    // Заголовок "РАСХОДЫ ИНГРЕДИЕНТОВ"
    ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
    ДокументОтчет.Область(НомерСтроки,1).Текст = "РАСХОДЫ ИНГРЕДИЕНТОВ";
    ДокументОтчет.Область(НомерСтроки,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
    ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,,Истина);
    НомерСтроки = НомерСтроки + 1;

    Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда

            ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
            ДокументОтчет.Область(НомерСтроки,1).Текст = СтрШаблон("Блюдо: %1 (%2 порций)", СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);
            ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,,Истина);
            НомерСтроки = НомерСтроки + 1;

            СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

            Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
                Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.ОбщееКоличество > 0 Тогда
                    ДокументОтчет.Область(НомерСтроки,1).Текст = "  - " + Строка(СтрокаИнгредиент.Ингредиент);
                    ДокументОтчет.Область(НомерСтроки,2).Текст = Формат(СтрокаИнгредиент.ОбщееКоличество, "ЧДЦ=3") + " кг";
                    ДокументОтчет.Область(НомерСтроки,3).Текст = "(расход)";
                    НомерСтроки = НомерСтроки + 1;
                КонецЕсли;
            КонецЦикла;
            НомерСтроки = НомерСтроки + 1; // Пустая строка между блюдами
        КонецЕсли;
    КонецЦикла;

    // Заголовок "ПРИХОД ГОТОВЫХ БЛЮД"
    ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
    ДокументОтчет.Область(НомерСтроки,1).Текст = "ПРИХОД ГОТОВЫХ БЛЮД";
    ДокументОтчет.Область(НомерСтроки,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
    ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,,Истина);
    НомерСтроки = НомерСтроки + 1;

    Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
            ДокументОтчет.Область(НомерСтроки,1).Текст = "  + " + Строка(СтрокаБлюда.Блюдо);
            ДокументОтчет.Область(НомерСтроки,2).Текст = Строка(СтрокаБлюда.КоличествоПорций) + " порций";
            ДокументОтчет.Область(НомерСтроки,3).Текст = "стоимость " + Формат(СтрокаБлюда.ОбщаяПлановаяСебестоимость, "ЧДЦ=2") + " грн";
            ДокументОтчет.Область(НомерСтроки,4).Текст = "(приход)";
            НомерСтроки = НомерСтроки + 1;
        КонецЕсли;
    КонецЦикла;

    Возврат ДокументОтчет;

КонецФункции

&НаСервере
Функция ОстаткиНаСкладеНаСервере()

    Если НЕ ЗначениеЗаполнено(Объект.СкладСырья) И НЕ ЗначениеЗаполнено(Объект.СкладГотовойПродукции) Тогда
        Возврат "Не заполнены склады для просмотра остатков";
    КонецЕсли;

    ТекстОстатков = "";
    ТекстОстатков = ТекстОстатков + "=== ОСТАТКИ НА СКЛАДАХ ===" + Символы.ПС;
    ТекстОстатков = ТекстОстатков + "Дата: " + ТекущаяДата() + Символы.ПС + Символы.ПС;

    // Остатки ингредиентов на складе сырья
    Если ЗначениеЗаполнено(Объект.СкладСырья) Тогда
        ТекстОстатков = ТекстОстатков + "СКЛАД СЫРЬЯ: " + Объект.СкладСырья + Символы.ПС;

        // Получаем список всех ингредиентов из документа
        СписокИнгредиентов = Новый ТаблицаЗначений;
        СписокИнгредиентов.Колонки.Добавить("Ингредиент");
        СписокИнгредиентов.Колонки.Добавить("ТребуетсяКоличество", Новый ОписаниеТипов("Число"));

        Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
            Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
                СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

                Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
                    Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.ОбщееКоличество > 0 Тогда
                        // Ищем ингредиент в списке
                        НайденнаяСтрока = Неопределено;
                        Для Каждого СтрокаСписка Из СписокИнгредиентов Цикл
                            Если СтрокаСписка.Ингредиент = СтрокаИнгредиент.Ингредиент Тогда
                                НайденнаяСтрока = СтрокаСписка;
                                Прервать;
                            КонецЕсли;
                        КонецЦикла;

                        Если НайденнаяСтрока = Неопределено Тогда
                            НайденнаяСтрока = СписокИнгредиентов.Добавить();
                            НайденнаяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                            НайденнаяСтрока.ТребуетсяКоличество = 0;
                        КонецЕсли;

                        НайденнаяСтрока.ТребуетсяКоличество = НайденнаяСтрока.ТребуетсяКоличество + СтрокаИнгредиент.ОбщееКоличество;
                    КонецЕсли;
                КонецЦикла;
            КонецЕсли;
        КонецЦикла;

        // Показываем остатки каждого ингредиента
        Для Каждого СтрокаИнгредиента Из СписокИнгредиентов Цикл
            ОстатокНаСкладе = ПолучитьОстатокТовараНаСкладе(СтрокаИнгредиента.Ингредиент, Объект.СкладСырья);

            СостояниеТекст = "";
            Если ОстатокНаСкладе >= СтрокаИнгредиента.ТребуетсяКоличество Тогда
                СостояниеТекст = "✅ ДОСТАТОЧНО";
            Иначе
                СостояниеТекст = "❌ НЕДОСТАТОК";
            КонецЕсли;

            ТекстОстатков = ТекстОстатков + СтрШаблон("  %1: остаток %2 кг, требуется %3 кг - %4",
                СтрокаИнгредиента.Ингредиент,
                ОстатокНаСкладе,
                СтрокаИнгредиента.ТребуетсяКоличество,
                СостояниеТекст) + Символы.ПС;
        КонецЦикла;

        ТекстОстатков = ТекстОстатков + Символы.ПС;
    КонецЕсли;

    // Остатки готовых блюд на складе готовой продукции
    Если ЗначениеЗаполнено(Объект.СкладГотовойПродукции) Тогда
        ТекстОстатков = ТекстОстатков + "СКЛАД ГОТОВОЙ ПРОДУКЦИИ: " + Объект.СкладГотовойПродукции + Символы.ПС;

        Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
            Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) Тогда
                ОстатокГотовогоБлюда = ПолучитьОстатокТовараНаСкладе(СтрокаБлюда.Блюдо, Объект.СкладГотовойПродукции);
                БудетПослеПриготовления = ОстатокГотовогоБлюда + СтрокаБлюда.КоличествоПорций;

                ТекстОстатков = ТекстОстатков + СтрШаблон("  %1: текущий остаток %2 порций, будет добавлено %3, итого %4",
                    СтрокаБлюда.Блюдо,
                    ОстатокГотовогоБлюда,
                    СтрокаБлюда.КоличествоПорций,
                    БудетПослеПриготовления) + Символы.ПС;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;

    Возврат ТекстОстатков;

КонецФункции

&НаСервере
Процедура ЗаполнитьПоТехкарточкамНаСервере()

    // Очищаем текущие данные
    Объект.ПриготавливаемыеБлюда.Очистить();

    // Получаем список всех техкарточек
    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |    Техкарточки.ГотовоеБлюдо КАК Блюдо,
        |    Техкарточки.СебестоимостьПорции КАК СебестоимостьПорции
        |ИЗ
        |    Справочник.Техкарточки КАК Техкарточки
        |ГДЕ
        |    НЕ Техкарточки.ПометкаУдаления
        |    AND НЕ Техкарточки.ГотовоеБлюдо = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
        |    AND Техкарточки.СебестоимостьПорции > 0
        |
        |УПОРЯДОЧИТЬ ПО
        |    Техкарточки.ГотовоеБлюдо.Наименование";

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();

            Пока Выборка.Следующий() Цикл
                НоваяСтрока = Объект.ПриготавливаемыеБлюда.Добавить();
                НоваяСтрока.Блюдо = Выборка.Блюдо;
                НоваяСтрока.КоличествоПорций = 1; // По умолчанию 1 порция
                НоваяСтрока.ПлановаяСебестоимостьПорции = Выборка.СебестоимостьПорции;
                НоваяСтрока.ОбщаяПлановаяСебестоимость = НоваяСтрока.КоличествоПорций * НоваяСтрока.ПлановаяСебестоимостьПорции;
            КонецЦикла;

            Сообщить(СтрШаблон("Добавлено %1 блюд из техкарточек", Объект.ПриготавливаемыеБлюда.Количество()));
        Иначе
            Сообщить("Не найдено ни одной техкарточки с заполненными данными");
        КонецЕсли;

    Исключение
        Сообщить("Ошибка при загрузке техкарточек: " + ОписаниеОшибки());
    КонецПопытки;

КонецПроцедуры


&НаСервере
Процедура ПроверитьНаличиеИнгредиентовНаСервере()

    Если НЕ ЗначениеЗаполнено(Объект.СкладСырья) Тогда
        Сообщить("Укажите склад сырья");
        Возврат;
    КонецЕсли;

    Если Объект.ПриготавливаемыеБлюда.Количество() = 0 Тогда
        Сообщить("Добавьте блюда для приготовления");
        Возврат;
    КонецЕсли;

    ТекстПроверки = "";
    ЕстьНедостатки = Ложь;

    Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл

        Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда

            // Получаем состав ингредиентов из техкарточки
            СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

            Если СоставИнгредиентов.Количество() = 0 Тогда
                ТекстПроверки = ТекстПроверки + СтрШаблон("
                |⚠ Блюдо ""%1"" - не найден состав ингредиентов в техкарточке", СтрокаБлюда.Блюдо);
                ЕстьНедостатки = Истина;
                Продолжить;
            КонецЕсли;

            // Проверяем остатки ингредиентов на складе
            Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл

                ОстатокНаСкладе = ПолучитьОстатокТовараНаСкладе(СтрокаИнгредиент.Ингредиент, Объект.СкладСырья);

                Если ОстатокНаСкладе < СтрокаИнгредиент.ОбщееКоличество Тогда
                    ТекстПроверки = ТекстПроверки + СтрШаблон("
                    |❌ %1: требуется %2 кг, на складе %3 кг (недостает %4 кг)",
                        СтрокаИнгредиент.Ингредиент,
                        СтрокаИнгредиент.ОбщееКоличество,
                        ОстатокНаСкладе,
                        СтрокаИнгредиент.ОбщееКоличество - ОстатокНаСкладе);
                    ЕстьНедостатки = Истина;
                Иначе
                    ТекстПроверки = ТекстПроверки + СтрШаблон("
                    |✅ %1: требуется %2 кг, на складе %3 кг",
                        СтрокаИнгредиент.Ингредиент,
                        СтрокаИнгредиент.ОбщееКоличество,
                        ОстатокНаСкладе);
                КонецЕсли;

            КонецЦикла;

        КонецЕсли;

    КонецЦикла;

    Если ПустаяСтрока(ТекстПроверки) Тогда
        Сообщить("Нет данных для проверки");
    Иначе
        Если ЕстьНедостатки Тогда
            Сообщить("ПРОВЕРКА НАЛИЧИЯ ИНГРЕДИЕНТОВ - ЕСТЬ НЕДОСТАТКИ:" + ТекстПроверки);
        Иначе
            Сообщить("ПРОВЕРКА НАЛИЧИЯ ИНГРЕДИЕНТОВ - ВСЕ В ПОРЯДКЕ:" + ТекстПроверки);
        КонецЕсли;
    КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьОстатокТовараНаСкладе(Номенклатура, Склад)

    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ
        |    ЕСТЬNULL(РегистрТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК Остаток
        |ИЗ
        |    РегистрНакопления.РегистрТоварыНаСкладах.Остатки(, Номенклатура = &Номенклатура AND Склад = &Склад) КАК РегистрТоварыНаСкладахОстатки";

        Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
        Запрос.УстановитьПараметр("Склад", Склад);

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            Возврат Выборка.Остаток;
        КонецЕсли;
    Исключение
        // Ошибка при запросе остатков - возвращаем 0
    КонецПопытки;

    Возврат 0;

КонецФункции

// Получаем состав ингредиентов из техкарточки
&НаСервере
Функция ПолучитьСоставИнгредиентовИзТехкарточки(ГотовоеБлюдо, КоличествоПорций = 1)

    Техкарточка = ПолучитьТехкарточкуДляБлюда(ГотовоеБлюдо);
    СоставИнгредиентов = Новый ТаблицаЗначений;
    СоставИнгредиентов.Колонки.Добавить("Ингредиент");
    СоставИнгредиентов.Колонки.Добавить("КоличествоНаПорцию", Новый ОписаниеТипов("Число"));
    СоставИнгредиентов.Колонки.Добавить("ОбщееКоличество", Новый ОписаниеТипов("Число"));

    Если ЗначениеЗаполнено(Техкарточка) Тогда
        Попытка
            Для Каждого СтрокаИнгредиент Из Техкарточка.СоставИнгредиентов Цикл
                Если ЗначениеЗаполнено(СтрокаИнгредиент.Ингредиент) И СтрокаИнгредиент.НормаБрутто > 0 Тогда
                    НоваяСтрока = СоставИнгредиентов.Добавить();
                    НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                    НоваяСтрока.КоличествоНаПорцию = СтрокаИнгредиент.НормаБрутто / 1000; // Переводим граммы в килограммы
                    НоваяСтрока.ОбщееКоличество = НоваяСтрока.КоличествоНаПорцию * КоличествоПорций;
                КонецЕсли;
            КонецЦикла;
        Исключение
            // Ошибка при получении состава ингредиентов
        КонецПопытки;
    КонецЕсли;

    Возврат СоставИнгредиентов;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТехкарточкуДляБлюда(ГотовоеБлюдо)

    Если НЕ ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Возврат Справочники.Техкарточки.ПустаяСсылка();
    КонецЕсли;

    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |    Техкарточки.Ссылка КАК Техкарточка
        |ИЗ
        |    Справочник.Техкарточки КАК Техкарточки
        |ГДЕ
        |    Техкарточки.ГотовоеБлюдо = &ГотовоеБлюдо
        |    И НЕ Техкарточки.ПометкаУдаления";

        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            Возврат Выборка.Техкарточка;
        КонецЕсли;
    Исключение
        // Ошибка при запросе
    КонецПопытки;

    Возврат Справочники.Техкарточки.ПустаяСсылка();

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьОбщуюСебестоимость(ТекущаяСтрока)

    // Простой расчет общей себестоимости
    Попытка
        КоличествоПорций = ТекущаяСтрока.КоличествоПорций;
    Исключение
        Попытка
            КоличествоПорций = ТекущаяСтрока.Количество;
        Исключение
            КоличествоПорций = 0;
        КонецПопытки;
    КонецПопытки;

    Если КоличествоПорций > 0 И ТекущаяСтрока.ПлановаяСебестоимостьПорции > 0 Тогда
        ТекущаяСтрока.ОбщаяПлановаяСебестоимость = КоличествоПорций * ТекущаяСтрока.ПлановаяСебестоимостьПорции;
    Иначе
        ТекущаяСтрока.ОбщаяПлановаяСебестоимость = 0;
    КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСебестоимостьИзТехкарточки(Блюдо)

    Если НЕ ЗначениеЗаполнено(Блюдо) Тогда
        Возврат 0;
    КонецЕсли;

    Попытка
        // Ищем техкарточку для данного блюда
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |    Техкарточки.СебестоимостьПорции КАК СебестоимостьПорции
        |ИЗ
        |    Справочник.Техкарточки КАК Техкарточки
        |ГДЕ
        |    Техкарточки.ГотовоеБлюдо = &ГотовоеБлюдо
        |    И НЕ Техкарточки.ПометкаУдаления";

        Запрос.УстановитьПараметр("ГотовоеБлюдо", Блюдо);

        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Выборка.Следующий();
            Если Выборка.СебестоимостьПорции > 0 Тогда
                Возврат Выборка.СебестоимостьПорции;
            КонецЕсли;
        КонецЕсли;
    Исключение
        // Ошибка при запросе - используем примерные значения
    КонецПопытки;

    // Если техкарточка не найдена или себестоимость = 0, используем примерные значения
    НаименованиеБлюда = Строка(Блюдо);
    НаименованиеВНижнемРегистре = НРег(НаименованиеБлюда);

    Если Найти(НаименованиеВНижнемРегистре, "суп") > 0 Тогда
        Возврат 45; // 45 грн за порцию супа
    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "салат") > 0 Тогда
        Возврат 35; // 35 грн за порцию салата
    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "мясо") > 0
        Или Найти(НаименованиеВНижнемРегистре, "котлета") > 0
        Или Найти(НаименованиеВНижнемРегистре, "стейк") > 0 Тогда
        Возврат 85; // 85 грн за мясное блюдо
    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "рыба") > 0 Тогда
        Возврат 75; // 75 грн за рыбное блюдо
    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "паста") > 0
        Или Найти(НаименованиеВНижнемРегистре, "макароны") > 0 Тогда
        Возврат 40; // 40 грн за пасту
    ИначеЕсли Найти(НаименованиеВНижнемРегистре, "десерт") > 0
        Или Найти(НаименованиеВНижнемРегистре, "торт") > 0
        Или Найти(НаименованиеВНижнемРегистре, "мороженое") > 0 Тогда
        Возврат 25; // 25 грн за десерт
    Иначе
        Возврат 50; // 50 грн - средняя себестоимость
    КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()

    ВсегоПорций = 0;
    ОбщаяСебестоимость = 0;

    Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
        ВсегоПорций = ВсегоПорций + СтрокаБлюда.КоличествоПорций;
        ОбщаяСебестоимость = ОбщаяСебестоимость + СтрокаБлюда.ОбщаяПлановаяСебестоимость;
    КонецЦикла;

    // Простой заголовок
    Если ВсегоПорций > 0 Тогда
        ЭтотОбъект.Заголовок = СтрШаблон("Приготовление блюда (всего %1 порций на %2 грн)", ВсегоПорций, ОбщаяСебестоимость);
    Иначе
        ЭтотОбъект.Заголовок = "Приготовление блюда";
    КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОткрытьОтчетОстатков()

    ДокументОтчет = СоздатьОтчетОстатковНаСервере();
    ДокументОтчет.Показать("Остатки на складе");

КонецПроцедуры

&НаСервере
Функция СоздатьОтчетОстатковНаСервере()

    ДокументОтчет = Новый ТабличныйДокумент;

    // Заголовок отчета
    ДокументОтчет.Область(1,1,1,4).Объединить();
    ДокументОтчет.Область(1,1).Текст = "ОСТАТКИ НА СКЛАДЕ";
    ДокументОтчет.Область(1,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
    ДокументОтчет.Область(1,1).Шрифт = Новый Шрифт(,14,Истина);

    ДокументОтчет.Область(2,1,2,4).Объединить();
    ДокументОтчет.Область(2,1).Текст = "На дату: " + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy ВВ=ЧЧ:мм:сс");
    ДокументОтчет.Область(2,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;

    НомерСтроки = 4;

    // Проверяем заполненность складов
    Если НЕ ЗначениеЗаполнено(Объект.СкладСырья) И НЕ ЗначениеЗаполнено(Объект.СкладГотовойПродукции) Тогда
        ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
        ДокументОтчет.Область(НомерСтроки,1).Текст = "НЕ ЗАПОЛНЕНЫ СКЛАДЫ ДЛЯ ПРОСМОТРА ОСТАТКОВ";
        ДокументОтчет.Область(НомерСтроки,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
        ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,12,Истина);
        Возврат ДокументОтчет;
    КонецЕсли;

    // ОСТАТКИ ИНГРЕДИЕНТОВ НА СКЛАДЕ СЫРЬЯ
    Если ЗначениеЗаполнено(Объект.СкладСырья) Тогда
        ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
        ДокументОтчет.Область(НомерСтроки,1).Текст = "=== СКЛАД СЫРЬЯ: " + Объект.СкладСырья + " ===";
        ДокументОтчет.Область(НомерСтроки,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
        ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,,Истина);
        НомерСтроки = НомерСтроки + 2;

        // Заголовок таблицы
        ДокументОтчет.Область(НомерСтроки,1).Текст = "Ингредиент";
        ДокументОтчет.Область(НомерСтроки,2).Текст = "Остаток (кг)";
        ДокументОтчет.Область(НомерСтроки,3).Текст = "Потребно (кг)";
        ДокументОтчет.Область(НомерСтроки,4).Текст = "Статус";
        ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Шрифт = Новый Шрифт(,,Истина);
        НомерСтроки = НомерСтроки + 1;

        // Собираем все уникальные ингредиенты и их потребность
        СписокИнгредиентов = Новый ТаблицаЗначений;
        СписокИнгредиентов.Колонки.Добавить("Ингредиент");
        СписокИнгредиентов.Колонки.Добавить("ПотребноеКоличество", Новый ОписаниеТипов("Число"));

        Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
            Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) И СтрокаБлюда.КоличествоПорций > 0 Тогда
                СоставИнгредиентов = ПолучитьСоставИнгредиентовИзТехкарточки(СтрокаБлюда.Блюдо, СтрокаБлюда.КоличествоПорций);

                Для Каждого СтрокаИнгредиент Из СоставИнгредиентов Цикл
                    НайденнаяСтрока = СписокИнгредиентов.Найти(СтрокаИнгредиент.Ингредиент, "Ингредиент");
                    Если НайденнаяСтрока = Неопределено Тогда
                        НоваяСтрока = СписокИнгредиентов.Добавить();
                        НоваяСтрока.Ингредиент = СтрокаИнгредиент.Ингредиент;
                        НоваяСтрока.ПотребноеКоличество = СтрокаИнгредиент.ОбщееКоличество;
                    Иначе
                        НайденнаяСтрока.ПотребноеКоличество = НайденнаяСтрока.ПотребноеКоличество + СтрокаИнгредиент.ОбщееКоличество;
                    КонецЕсли;
                КонецЦикла;
            КонецЕсли;
        КонецЦикла;

        // Выводим остатки ингредиентов
        Для Каждого СтрокаИнгредиент Из СписокИнгредиентов Цикл
            ТекущийОстаток = ПолучитьОстатокТовараНаСкладе(СтрокаИнгредиент.Ингредиент, Объект.СкладСырья);

            ДокументОтчет.Область(НомерСтроки,1).Текст = Строка(СтрокаИнгредиент.Ингредиент);
            ДокументОтчет.Область(НомерСтроки,2).Текст = Формат(ТекущийОстаток, "ЧДЦ=3");
            ДокументОтчет.Область(НомерСтроки,3).Текст = Формат(СтрокаИнгредиент.ПотребноеКоличество, "ЧДЦ=3");

            Если ТекущийОстаток >= СтрокаИнгредиент.ПотребноеКоличество Тогда
                ДокументОтчет.Область(НомерСтроки,4).Текст = "ДОСТАТОЧНО";
            Иначе
                ДокументОтчет.Область(НомерСтроки,4).Текст = "НЕХВАТКА: " + Формат(СтрокаИнгредиент.ПотребноеКоличество - ТекущийОстаток, "ЧДЦ=3") + " кг";
            КонецЕсли;

            НомерСтроки = НомерСтроки + 1;
        КонецЦикла;

        НомерСтроки = НомерСтроки + 1;
    КонецЕсли;

    // ГОТОВЫЕ БЛЮДА НА СКЛАДЕ
    Если ЗначениеЗаполнено(Объект.СкладГотовойПродукции) Тогда
        НомерСтроки = НомерСтроки + 1;
        ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Объединить();
        ДокументОтчет.Область(НомерСтроки,1).Текст = "=== СКЛАД ГОТОВОЙ ПРОДУКЦИИ: " + Объект.СкладГотовойПродукции + " ===";
        ДокументОтчет.Область(НомерСтроки,1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
        ДокументОтчет.Область(НомерСтроки,1).Шрифт = Новый Шрифт(,,Истина);
        НомерСтроки = НомерСтроки + 2;

        // Заголовок таблицы готовых блюд
        ДокументОтчет.Область(НомерСтроки,1).Текст = "Готовое блюдо";
        ДокументОтчет.Область(НомерСтроки,2).Текст = "Остаток";
        ДокументОтчет.Область(НомерСтроки,3).Текст = "Будет добавлено";
        ДокументОтчет.Область(НомерСтроки,4).Текст = "Итого";
        ДокументОтчет.Область(НомерСтроки,1,НомерСтроки,4).Шрифт = Новый Шрифт(,,Истина);
        НомерСтроки = НомерСтроки + 1;

        Для Каждого СтрокаБлюда Из Объект.ПриготавливаемыеБлюда Цикл
            Если ЗначениеЗаполнено(СтрокаБлюда.Блюдо) Тогда
                ОстатокБлюда = ПолучитьОстатокТовараНаСкладе(СтрокаБлюда.Блюдо, Объект.СкладГотовойПродукции);

                ДокументОтчет.Область(НомерСтроки,1).Текст = Строка(СтрокаБлюда.Блюдо);
                ДокументОтчет.Область(НомерСтроки,2).Текст = Формат(ОстатокБлюда, "ЧДЦ=0") + " порций";
                ДокументОтчет.Область(НомерСтроки,3).Текст = "+" + СтрокаБлюда.КоличествоПорций + " порций";
                ДокументОтчет.Область(НомерСтроки,4).Текст = Формат(ОстатокБлюда + СтрокаБлюда.КоличествоПорций, "ЧДЦ=0") + " порций";
                НомерСтроки = НомерСтроки + 1;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;

    // Возвращаем готовый отчет для отображения на клиенте
    Возврат ДокументОтчет;

КонецФункции

#КонецОбласти
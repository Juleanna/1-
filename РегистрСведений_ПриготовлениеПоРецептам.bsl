// Регистр сведений "Приготовление по рецептам"
// Для учета фактического приготовления блюд и списания ингредиентов

#Область ОбработчикиСобытий

Процедура ОбработкаЗаписи(Отказ, Замещение)
    
    // Дополнительная обработка при записи, если необходимо
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получить данные приготовления за период
Функция ПолучитьДанныеПриготовленияЗаПериод(НачалоПериода, КонецПериода, Рецепт = Неопределено, ГотовоеБлюдо = Неопределено)
    
    Запрос = Новый Запрос;
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |    ПриготовлениеПоРецептам.ДатаВремя КАК ДатаВремя,
    |    ПриготовлениеПоРецептам.Рецепт КАК Рецепт,
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо КАК ГотовоеБлюдо,
    |    ПриготовлениеПоРецептам.Ингредиент КАК Ингредиент,
    |    СУММА(ПриготовлениеПоРецептам.КоличествоПорций) КАК КоличествоПорций,
    |    СУММА(ПриготовлениеПоРецептам.КоличествоИнгредиента) КАК КоличествоИнгредиента,
    |    СУММА(ПриготовлениеПоРецептам.СтоимостьИнгредиента) КАК СтоимостьИнгредиента,
    |    ПриготовлениеПоРецептам.СкладСырья КАК СкладСырья,
    |    ПриготовлениеПоРецептам.СкладГотовойПродукции КАК СкладГотовойПродукции
    |ИЗ
    |    РегистрСведений.ПриготовлениеПоРецептам КАК ПриготовлениеПоРецептам
    |ГДЕ
    |    ПриготовлениеПоРецептам.ДатаВремя МЕЖДУ &НачалоПериода И &КонецПериода";
    
    Если ЗначениеЗаполнено(Рецепт) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |    И ПриготовлениеПоРецептам.Рецепт = &Рецепт";
    КонецЕсли;
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |    И ПриготовлениеПоРецептам.ГотовоеБлюдо = &ГотовоеБлюдо";
    КонецЕсли;
    
    ТекстЗапроса = ТекстЗапроса + "
    |
    |СГРУППИРОВАТЬ ПО
    |    ПриготовлениеПоРецептам.ДатаВремя,
    |    ПриготовлениеПоРецептам.Рецепт,
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо,
    |    ПриготовлениеПоРецептам.Ингредиент,
    |    ПриготовлениеПоРецептам.СкладСырья,
    |    ПриготовлениеПоРецептам.СкладГотовойПродукции
    |
    |УПОРЯДОЧИТЬ ПО
    |    ДатаВремя,
    |    ГотовоеБлюдо,
    |    Ингредиент";
    
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Если ЗначениеЗаполнено(Рецепт) Тогда
        Запрос.УстановитьПараметр("Рецепт", Рецепт);
    КонецЕсли;
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    КонецЕсли;
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

// Получить статистику расхода ингредиентов
Функция ПолучитьСтатистикуРасходаИнгредиентов(НачалоПериода, КонецПериода, Ингредиент = Неопределено)
    
    Запрос = Новый Запрос;
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |    ПриготовлениеПоРецептам.Ингредиент КАК Ингредиент,
    |    ПриготовлениеПоРецептам.Ингредиент.Наименование КАК НаименованиеИнгредиента,
    |    СУММА(ПриготовлениеПоРецептам.КоличествоИнгредиента) КАК ОбщееКоличество,
    |    СУММА(ПриготовлениеПоРецептам.СтоимостьИнгредиента) КАК ОбщаяСтоимость,
    |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриготовлениеПоРецептам.ГотовоеБлюдо) КАК КоличествоБлюд,
    |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриготовлениеПоРецептам.Рецепт) КАК КоличествоРецептов
    |ИЗ
    |    РегистрСведений.ПриготовлениеПоРецептам КАК ПриготовлениеПоРецептам
    |ГДЕ
    |    ПриготовлениеПоРецептам.ДатаВремя МЕЖДУ &НачалоПериода И &КонецПериода";
    
    Если ЗначениеЗаполнено(Ингредиент) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |    И ПриготовлениеПоРецептам.Ингредиент = &Ингредиент";
    КонецЕсли;
    
    ТекстЗапроса = ТекстЗапроса + "
    |
    |СГРУППИРОВАТЬ ПО
    |    ПриготовлениеПоРецептам.Ингредиент,
    |    ПриготовлениеПоРецептам.Ингредиент.Наименование
    |
    |УПОРЯДОЧИТЬ ПО
    |    ОбщаяСтоимость УБЫВ";
    
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Если ЗначениеЗаполнено(Ингредиент) Тогда
        Запрос.УстановитьПараметр("Ингредиент", Ингредиент);
    КонецЕсли;
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

// Получить статистику приготовленных блюд
Функция ПолучитьСтатистикуПриготовленныхБлюд(НачалоПериода, КонецПериода, ГотовоеБлюдо = Неопределено)
    
    Запрос = Новый Запрос;
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо КАК ГотовоеБлюдо,
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо.Наименование КАК НаименованиеБлюда,
    |    ПриготовлениеПоРецептам.Рецепт КАК Рецепт,
    |    ПриготовлениеПоРецептам.Рецепт.Наименование КАК НаименованиеРецепта,
    |    СУММА(ПриготовлениеПоРецептам.КоличествоПорций) КАК ОбщееКоличествоПорций,
    |    СУММА(ПриготовлениеПоРецептам.СтоимостьИнгредиента) КАК СебестоимостьПриготовления,
    |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриготовлениеПоРецептам.Ингредиент) КАК КоличествоИнгредиентов
    |ИЗ
    |    РегистрСведений.ПриготовлениеПоРецептам КАК ПриготовлениеПоРецептам
    |ГДЕ
    |    ПриготовлениеПоРецептам.ДатаВремя МЕЖДУ &НачалоПериода И &КонецПериода";
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |    И ПриготовлениеПоРецептам.ГотовоеБлюдо = &ГотовоеБлюдо";
    КонецЕсли;
    
    ТекстЗапроса = ТекстЗапроса + "
    |
    |СГРУППИРОВАТЬ ПО
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо,
    |    ПриготовлениеПоРецептам.ГотовоеБлюдо.Наименование,
    |    ПриготовлениеПоРецептам.Рецепт,
    |    ПриготовлениеПоРецептам.Рецепт.Наименование
    |
    |УПОРЯДОЧИТЬ ПО
    |    ОбщееКоличествоПорций УБЫВ";
    
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    КонецЕсли;
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

// Получить статистику по дням приготовления
Функция ПолучитьСтатистикуПоДням(НачалоПериода, КонецПериода, ГотовоеБлюдо = Неопределено)
    
    Запрос = Новый Запрос;
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |    НАЧАЛОПЕРИОДА(ПриготовлениеПоРецептам.ДатаВремя, ДЕНЬ) КАК ДеньПриготовления,
    |    СУММА(ПриготовлениеПоРецептам.КоличествоПорций) КАК ВсегоПорций,
    |    СУММА(ПриготовлениеПоРецептам.СтоимостьИнгредиента) КАК ОбщаяСтоимостьИнгредиентов,
    |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриготовлениеПоРецептам.ГотовоеБлюдо) КАК РазличныхБлюд,
    |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриготовлениеПоРецептам.Рецепт) КАК РазличныхРецептов
    |ИЗ
    |    РегистрСведений.ПриготовлениеПоРецептам КАК ПриготовлениеПоРецептам
    |ГДЕ
    |    ПриготовлениеПоРецептам.ДатаВремя МЕЖДУ &НачалоПериода И &КонецПериода";
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |    И ПриготовлениеПоРецептам.ГотовоеБлюдо = &ГотовоеБлюдо";
    КонецЕсли;
    
    ТекстЗапроса = ТекстЗапроса + "
    |
    |СГРУППИРОВАТЬ ПО
    |    НАЧАЛОПЕРИОДА(ПриготовлениеПоРецептам.ДатаВремя, ДЕНЬ)
    |
    |УПОРЯДОЧИТЬ ПО
    |    ДеньПриготовления";
    
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    КонецЕсли;
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

// Проверить соответствие фактического расхода плановому
Функция ПроверитьСоответствиеПлановомуРасходу(НачалоПериода, КонецПериода, ГотовоеБлюдо = Неопределено)
    
    Запрос = Новый Запрос;
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |    ФактическиеДанные.ГотовоеБлюдо КАК ГотовоеБлюдо,
    |    ФактическиеДанные.Ингредиент КАК Ингредиент,
    |    ФактическиеДанные.КоличествоПорций КАК ФактКоличествоПорций,
    |    ФактическиеДанные.КоличествоИнгредиента КАК ФактКоличествоИнгредиента,
    |    ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 * ФактическиеДанные.КоличествоПорций КАК ПланКоличествоИнгредиента,
    |    (ФактическиеДанные.КоличествоИнгредиента - ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 * ФактическиеДанные.КоличествоПорций) КАК Отклонение,
    |    ВЫБОР
    |        КОГДА ТехкарточкиСоставИнгредиентов.НормаБрутто > 0
    |        ТОГДА (ФактическиеДанные.КоличествоИнгредиента - ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 * ФактическиеДанные.КоличествоПорций) / (ТехкарточкиСоставИнгредиентов.НормаБрутто / 1000 * ФактическиеДанные.КоличествоПорций) * 100
    |        ИНАЧЕ 0
    |    КОНЕЦ КАК ОтклонениеПроцент
    |ИЗ
    |    (ВЫБРАТЬ
    |        ПриготовлениеПоРецептам.ГотовоеБлюдо КАК ГотовоеБлюдо,
    |        ПриготовлениеПоРецептам.Ингредиент КАК Ингредиент,
    |        ПриготовлениеПоРецептам.Рецепт КАК Рецепт,
    |        СУММА(ПриготовлениеПоРецептам.КоличествоПорций) КАК КоличествоПорций,
    |        СУММА(ПриготовлениеПоРецептам.КоличествоИнгредиента) КАК КоличествоИнгредиента
    |    ИЗ
    |        РегистрСведений.ПриготовлениеПоРецептам КАК ПриготовлениеПоРецептам
    |    ГДЕ
    |        ПриготовлениеПоРецептам.Период МЕЖДУ &НачалоПериода И &КонецПериода";
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        ТекстЗапроса = ТекстЗапроса + "
        |        И ПриготовлениеПоРецептам.ГотовоеБлюдо = &ГотовоеБлюдо";
    КонецЕсли;
    
    ТекстЗапроса = ТекстЗапроса + "
    |    
    |    СГРУППИРОВАТЬ ПО
    |        ПриготовлениеПоРецептам.ГотовоеБлюдо,
    |        ПриготовлениеПоРецептам.Ингредиент,
    |        ПриготовлениеПоРецептам.Рецепт) КАК ФактическиеДанные
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Техкарточки.СоставИнгредиентов КАК ТехкарточкиСоставИнгредиентов
    |        ПО ФактическиеДанные.Ингредиент = ТехкарточкиСоставИнгредиентов.Ингредиент
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КулинарныеРецепты КАК КулинарныеРецепты
    |        ПО ФактическиеДанные.Рецепт = КулинарныеРецепты.Ссылка
    |            И ТехкарточкиСоставИнгредиентов.Ссылка = КулинарныеРецепты.Техкарточка
    |
    |УПОРЯДОЧИТЬ ПО
    |    АБС(ОтклонениеПроцент) УБЫВ";
    
    Запрос.Текст = ТекстЗапроса;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    
    Если ЗначениеЗаполнено(ГотовоеБлюдо) Тогда
        Запрос.УстановитьПараметр("ГотовоеБлюдо", ГотовоеБлюдо);
    КонецЕсли;
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

#КонецОбласти